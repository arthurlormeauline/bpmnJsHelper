<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Definitions_0fw5upu" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.32.0">
  <bpmn:process id="tus.subprc.contract" name="tus.subprc.contract" isExecutable="true" camunda:versionTag="camunda_0.10.2">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="gatewayId" label="gatewayId" type="string" />
          <camunda:formField id="url_site" label="url site" type="string" defaultValue="https://site.teamusages.dev.protectline.fr/" />
          <camunda:formField id="url_crm" label="url crm" type="string" defaultValue="https://crm-be.teamoffre.dev.protectline.fr/api/v1/" />
          <camunda:formField id="url_tb" label="URL TB" type="string" defaultValue="https://thingsboard-internal.teamusages.dev.protectline.fr/" />
          <camunda:formField id="url_notif" label="url notif" type="string" defaultValue="https://notifications-internal.teamusages.dev.protectline.fr" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:outgoing>Flow_0e948do</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_0e948do" sourceRef="StartEvent_1" targetRef="Activity_1uaqmis" />
    <bpmn:endEvent id="Event_18zy61z">
      <bpmn:incoming>Flow_0lkj3xq</bpmn:incoming>
      <bpmn:terminateEventDefinition id="TerminateEventDefinition_1qn0m94" />
    </bpmn:endEvent>
    <bpmn:serviceTask id="Activity_0p25yqr" name="Get Contract Info">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var GatewayId= execution.getVariable('gatewayId');
var url_site= execution.getVariable('url_site');
url_site+'sites?gatewayId='+GatewayId;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="siteRS">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
print('send email notif api ' + resp);
var respStatusCode = connector.getVariable('statusCode')
print(respStatusCode );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/


if ( respStatusCode == 200 || respStatusCode == 201 || respStatusCode == 202 || respStatusCode == 204) {
 print('no error');

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
}
execution.setVariable('incidentId',null);
/* end solving incident*/

execution.setVariable('httpCodeSite',respStatusCode);
execution.setVariable('stateSite',"SUCCESS")
execution.setVariable('siteObject',response)
var obj = JSON.parse(response);
} else{
execution.setVariable('httpCodeSite',respStatusCode);
execution.setVariable('stateSite',"FAIL")
execution.setVariable('siteObject',null);
try {
     var obj1=JSON.parse(response);
     execution.setVariable('errorMSG',obj1.message);

    } catch (e) {
      execution.setVariable('errorMSG',response);
    }
execution.setVariable('api',"Get Contract from Site");
/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Api Fail", context, response);
	newIncident.id
execution.setVariable('incidentId',newIncident.id);
print('incientId'+newIncident.id);
/*end create incident*/

 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_119m5f7</bpmn:incoming>
      <bpmn:outgoing>Flow_0kvrbdj</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_1qxyys0">
      <bpmn:incoming>Flow_0xr64r4</bpmn:incoming>
      <bpmn:outgoing>Flow_16j4id9</bpmn:outgoing>
      <bpmn:outgoing>Flow_0ltlkug</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:exclusiveGateway id="Gateway_18bmf32">
      <bpmn:incoming>Flow_0p8sz6d</bpmn:incoming>
      <bpmn:incoming>Flow_039x90x</bpmn:incoming>
      <bpmn:outgoing>Flow_119m5f7</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_119m5f7" sourceRef="Gateway_18bmf32" targetRef="Activity_0p25yqr" />
    <bpmn:sequenceFlow id="Flow_16j4id9" name="No Contract Returned" sourceRef="Gateway_1qxyys0" targetRef="Activity_170k84i">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${contractId== null || contractId==""}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:userTask id="Activity_170k84i" name="Check Data">
      <bpmn:incoming>Flow_16j4id9</bpmn:incoming>
      <bpmn:outgoing>Flow_0p8sz6d</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="Flow_0p8sz6d" sourceRef="Activity_170k84i" targetRef="Gateway_18bmf32" />
    <bpmn:serviceTask id="Activity_1r0g0f5" name="Get Customer Adress">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_crm}/contract/v1/${contractId}</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
                <camunda:entry key="authorization">Bearer ${tokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="adresseRS">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
print('get address from opencell api ' + resp);
var respStatusCode = connector.getVariable('statusCode')
print(respStatusCode );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/


if ( respStatusCode == 200 || respStatusCode == 201 || respStatusCode == 202 || respStatusCode == 204) {
 print('no error');

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

execution.setVariable('httpCodeADR',respStatusCode);
execution.setVariable('stateADR',"SUCCESS")
var obj = JSON.parse(response);
var adresse =(obj.address.postalCode!=null?obj.address.postalCode:'');
execution.setVariable('adresse',adresse);
var mode_gestion=false;
mode_gestion=(obj.temporaryDelegation)?obj.temporaryDelegation:obj.totalDelegation;
execution.setVariable('mode_gestion',mode_gestion);
var contract_status='ATT';
contract_status=obj.status;
execution.setVariable('contract_status',contract_status);
} else{
execution.setVariable('httpCodeADR',respStatusCode);
execution.setVariable('stateADR',"FAIL")
execution.setVariable('addresseObject',response);
execution.setVariable('adresse',null);
try {
     var obj1=JSON.parse(response);
     execution.setVariable('errorMSG',obj1.message);

    } catch (e) {
      execution.setVariable('errorMSG',response);
    }
execution.setVariable('api',"Get address from openCell");
/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Api Fail", context, response);
	newIncident.id
execution.setVariable('incidentId',newIncident.id);
print('incientId'+newIncident.id);
/*end create incident*/

 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0ltlkug</bpmn:incoming>
      <bpmn:outgoing>Flow_0yb0bbe</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0yb0bbe" sourceRef="Activity_1r0g0f5" targetRef="Activity_14b4o2m" />
    <bpmn:serviceTask id="Activity_14b4o2m" name="Get Emergency Contacts">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_emergency}emergencyContacts/v1/${contractId}/emergencyContacts</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
                <camunda:entry key="authorization">Bearer ${tokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="contactObjectRS">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
print('send emergency contacts from opencell ' + resp);
var respStatusCode = connector.getVariable('statusCode')
print(respStatusCode );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/


if ( respStatusCode == 200 || respStatusCode == 201 || respStatusCode == 202 || respStatusCode == 204) {
 print('no error');

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

execution.setVariable('httpCodeContactObj',respStatusCode);
execution.setVariable('stateContactObj',"SUCCESS")
execution.setVariable('contactObject',response)
} else{
execution.setVariable('httpCodeContactObj',respStatusCode);
execution.setVariable('stateContactObj',"FAIL")
execution.setVariable('contactObject',response);
try {
     var obj1=JSON.parse(response);
     execution.setVariable('errorMSG',obj1.message);

    } catch (e) {
      execution.setVariable('errorMSG',response.replace(/\n|\r/g,''));
    }
execution.setVariable('api',"Get emergencyContacts from openCell");
/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Api Fail", context, response);
	newIncident.id
execution.setVariable('incidentId',newIncident.id);
print('incientId'+newIncident.id);
/*end create incident*/

 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0yb0bbe</bpmn:incoming>
      <bpmn:outgoing>Flow_1u4l0m2</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:scriptTask id="Activity_1coim6f" name="Set Emergency Contacts" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_1u4l0m2</bpmn:incoming>
      <bpmn:outgoing>Flow_0lkj3xq</bpmn:outgoing>
      <bpmn:script>var response= execution.getVariable("contactObject");
var contactObject= JSON.parse(response);
var i;
var nbrContact= contactObject.length;
execution.setVariable("nbrContact",nbrContact);
for (i = 1; i &lt;= nbrContact; i++) {
if(contactObject[i-1] != null){
execution.setVariable("nom_"+i, contactObject[i-1].firstName+' '+contactObject[i-1].lastName);
execution.setVariable("firstName_"+i,contactObject[i-1].firstName);
execution.setVariable("lastName_"+i,contactObject[i-1].lastName);
execution.setVariable("mail_"+i, contactObject[i-1].email.trim());
execution.setVariable("tel_"+i,contactObject[i-1].mobilePhoneNumber.trim());
}
}</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0lkj3xq" sourceRef="Activity_1coim6f" targetRef="Event_18zy61z" />
    <bpmn:scriptTask id="Activity_1cujlpl" name="Set Site details" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_0kvrbdj</bpmn:incoming>
      <bpmn:outgoing>Flow_0xr64r4</bpmn:outgoing>
      <bpmn:script>var response= execution.getVariable("siteObject");
execution.setVariable("contractId",null);
execution.setVariable("supplier",null);
var siteObject= JSON.parse(response);
if(siteObject[0] != null){
execution.setVariable("contractId", siteObject[0].contractId != null?siteObject[0].contractId.trim():null);
execution.setVariable("AcknoledgeCode", siteObject[0].secretCode);
execution.setVariable("statusContract", siteObject[0].status);
if(siteObject[0].supplier != null){
if(siteObject[0].supplier.toLowerCase()==='orange')
execution.setVariable("supplier", "Orange");
else if(siteObject[0].supplier.toLowerCase() === 'groupama')
execution.setVariable("supplier", "Groupama");
}
}</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0xr64r4" sourceRef="Activity_1cujlpl" targetRef="Gateway_1qxyys0" />
    <bpmn:sequenceFlow id="Flow_0ltlkug" name="Contract Exist" sourceRef="Gateway_1qxyys0" targetRef="Activity_1r0g0f5">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${contractId != null &amp;&amp; contractId  != ""}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0kvrbdj" sourceRef="Activity_0p25yqr" targetRef="Activity_1cujlpl" />
    <bpmn:sequenceFlow id="Flow_1u4l0m2" sourceRef="Activity_14b4o2m" targetRef="Activity_1coim6f" />
    <bpmn:subProcess id="Activity_1emjoyl" triggeredByEvent="true">
      <bpmn:startEvent id="Event_1wfyend">
        <bpmn:outgoing>Flow_05xibtr</bpmn:outgoing>
        <bpmn:errorEventDefinition id="ErrorEventDefinition_0e80k2f" errorRef="Error_1h32sh3" camunda:errorMessageVariable="errorTaskId1" />
      </bpmn:startEvent>
      <bpmn:endEvent id="Event_18wk5hc">
        <bpmn:incoming>Flow_17h0v6n</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:scriptTask id="Activity_01az17o" name="Return to Last Task" camunda:asyncBefore="true" scriptFormat="JavaScript">
        <bpmn:incoming>Flow_1rivvaf</bpmn:incoming>
        <bpmn:outgoing>Flow_17h0v6n</bpmn:outgoing>
        <bpmn:script>print('Return to flow is Running');
var errorTaskId1= execution.getVariable('errorTaskId1');
if(errorTaskId1== null){
print('No where to go back to');
}else{           execution.getProcessEngineServices().
getRuntimeService().createProcessInstanceModification(execution.getProcessInstanceId()).startBeforeActivity(errorTaskId1).execute();
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_0efks0r">
        <bpmn:incoming>Flow_0isjctg</bpmn:incoming>
        <bpmn:outgoing>Flow_0dc0rpm</bpmn:outgoing>
        <bpmn:outgoing>Flow_1cthnzh</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:scriptTask id="Activity_0mb48po" name="set retries" scriptFormat="JavaScript">
        <bpmn:incoming>Flow_15t4i3r</bpmn:incoming>
        <bpmn:outgoing>Flow_0isjctg</bpmn:outgoing>
        <bpmn:script>var nbRetry= execution.getVariable("nbRetry");
if(nbRetry!=null){
nbRetry=nbRetry+1;
}else 
nbRetry=1;
execution.setVariable("nbRetry",nbRetry);
var duration=null;
switch(nbRetry){
case 1:
duration="PT15S";
break;
case 2:
duration="PT1M";
break;
case 3:
duration="PT2M"
break;
}
execution.setVariable("duration",duration);</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:serviceTask id="Activity_07o9jqb" name="Send internal mail" camunda:asyncBefore="true">
        <bpmn:extensionElements>
          <camunda:connector>
            <camunda:inputOutput>
              <camunda:inputParameter name="payload">
                <camunda:script scriptFormat="JavaScript">var alarmeId = execution.getVariable('alarmId');
var errorMSG = execution.getVariable('errorMSG');
var gatewayId = execution.getVariable('gatewayId');
 '{"options": {"alarmeId":"'+alarmeId+'","gatewayId":"'+gatewayId+'","errorMSG":"'+errorMSG+'","api":"'+api+'"}}';</camunda:script>
              </camunda:inputParameter>
              <camunda:inputParameter name="headers">
                <camunda:map>
                  <camunda:entry key="Content-Type">application/json</camunda:entry>
                  <camunda:entry key="accept">application/json</camunda:entry>
                </camunda:map>
              </camunda:inputParameter>
              <camunda:inputParameter name="method">POST</camunda:inputParameter>
              <camunda:inputParameter name="url">
                <camunda:script scriptFormat="JavaScript">var mail = 'team.usages@protectline.fr';
var gatewayId = execution.getVariable('gatewayId');
var url_tb = execution.getVariable('url_tb');
var env;
if(url_tb.indexOf(".dev.")!== -1)
env="DEV";
else if(url_tb.indexOf(".qa.")!== -1)
env="QA";
else if(url_tb.indexOf(".prod.")!== -1)
env="PROD";
var obj= 'Support%20gateway%20'+ gatewayId+'%20sur%20'+env;
execution.setVariable("sender", "TUS");
var from = execution.getVariable('sender');
var url_notif = execution.getVariable('url_notif');
 url_notif+'/email?from='+from+'&amp;subject='+obj+'&amp;template=TUS_TSBV2_SUPPORT&amp;to='+mail;</camunda:script>
              </camunda:inputParameter>
              <camunda:outputParameter name="Output_0v2hf2k">
                <camunda:script scriptFormat="JavaScript">connector.getVariable("response");</camunda:script>
              </camunda:outputParameter>
            </camunda:inputOutput>
            <camunda:connectorId>http-connector</camunda:connectorId>
          </camunda:connector>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1cthnzh</bpmn:incoming>
        <bpmn:outgoing>Flow_14t2ifu</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:endEvent id="Event_0cgytz1">
        <bpmn:incoming>Flow_14t2ifu</bpmn:incoming>
        <bpmn:terminateEventDefinition id="TerminateEventDefinition_0vgdkk0" />
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_17h0v6n" sourceRef="Activity_01az17o" targetRef="Event_18wk5hc" />
      <bpmn:sequenceFlow id="Flow_05xibtr" sourceRef="Event_1wfyend" targetRef="Activity_1jyy9oq" />
      <bpmn:sequenceFlow id="Flow_0dc0rpm" sourceRef="Gateway_0efks0r" targetRef="Event_1w2xf2f">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${nbRetry&lt;= 3}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_0isjctg" sourceRef="Activity_0mb48po" targetRef="Gateway_0efks0r" />
      <bpmn:sequenceFlow id="Flow_1cthnzh" sourceRef="Gateway_0efks0r" targetRef="Activity_07o9jqb">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${nbRetry&gt; 3}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_14t2ifu" sourceRef="Activity_07o9jqb" targetRef="Event_0cgytz1" />
      <bpmn:exclusiveGateway id="Gateway_0k4zyne">
        <bpmn:incoming>Flow_0sjjcsv</bpmn:incoming>
        <bpmn:outgoing>Flow_1svbeul</bpmn:outgoing>
        <bpmn:outgoing>Flow_1tb50dq</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:serviceTask id="Activity_123yr8a" name="Refresh token">
        <bpmn:extensionElements>
          <camunda:connector>
            <camunda:inputOutput>
              <camunda:inputParameter name="url">
                <camunda:script scriptFormat="JavaScript">var url_keycloack= execution.getVariable('url_keycloack');
url_keycloack;</camunda:script>
              </camunda:inputParameter>
              <camunda:inputParameter name="method">POST</camunda:inputParameter>
              <camunda:inputParameter name="headers">
                <camunda:map>
                  <camunda:entry key="content-type">application/x-www-form-urlencoded</camunda:entry>
                  <camunda:entry key="Accept">application/json</camunda:entry>
                  <camunda:entry key="authorization">Basic ${basicToken}</camunda:entry>
                </camunda:map>
              </camunda:inputParameter>
              <camunda:inputParameter name="payload">grant_type=client_credentials</camunda:inputParameter>
              <camunda:outputParameter name="Output_1tcqe5d">
                <camunda:script scriptFormat="JavaScript">obj = JSON.parse(connector.getVariable('response'));
var execution = connector.getParentVariableScope();
execution.setVariable('tokenKC',obj.access_token);</camunda:script>
              </camunda:outputParameter>
            </camunda:inputOutput>
            <camunda:connectorId>http-connector</camunda:connectorId>
          </camunda:connector>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1svbeul</bpmn:incoming>
        <bpmn:outgoing>Flow_1qjvq0e</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:sequenceFlow id="Flow_1svbeul" sourceRef="Gateway_0k4zyne" targetRef="Activity_123yr8a">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${refresh}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:exclusiveGateway id="Gateway_1xxnx21">
        <bpmn:incoming>Flow_1qjvq0e</bpmn:incoming>
        <bpmn:incoming>Flow_1tb50dq</bpmn:incoming>
        <bpmn:outgoing>Flow_1rivvaf</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="Flow_1rivvaf" sourceRef="Gateway_1xxnx21" targetRef="Activity_01az17o" />
      <bpmn:sequenceFlow id="Flow_15t4i3r" sourceRef="Activity_1jyy9oq" targetRef="Activity_0mb48po" />
      <bpmn:scriptTask id="Activity_1jyy9oq" name="Get Unauthorized" scriptFormat="JavaScript">
        <bpmn:incoming>Flow_05xibtr</bpmn:incoming>
        <bpmn:outgoing>Flow_15t4i3r</bpmn:outgoing>
        <bpmn:script>var statusCode= execution.getVariable("httpCodeADR");
var statusCode2= execution.getVariable("httpCodeContactObj");
if(statusCode==401 || statusCode2==401)
execution.setVariable("refresh",true);
else
execution.setVariable("refresh",false);</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:sequenceFlow id="Flow_1tb50dq" sourceRef="Gateway_0k4zyne" targetRef="Gateway_1xxnx21">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!refresh}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_1qjvq0e" sourceRef="Activity_123yr8a" targetRef="Gateway_1xxnx21" />
      <bpmn:intermediateCatchEvent id="Event_1w2xf2f">
        <bpmn:incoming>Flow_0dc0rpm</bpmn:incoming>
        <bpmn:outgoing>Flow_0sjjcsv</bpmn:outgoing>
        <bpmn:timerEventDefinition id="TimerEventDefinition_03p8pxn">
          <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">${duration}</bpmn:timeDuration>
        </bpmn:timerEventDefinition>
      </bpmn:intermediateCatchEvent>
      <bpmn:sequenceFlow id="Flow_0sjjcsv" sourceRef="Event_1w2xf2f" targetRef="Gateway_0k4zyne" />
    </bpmn:subProcess>
    <bpmn:serviceTask id="Activity_1uaqmis" name="Get keycloak token">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var url_keycloack= execution.getVariable('url_keycloack');
url_keycloack;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/x-www-form-urlencoded</camunda:entry>
                <camunda:entry key="Accept">application/json</camunda:entry>
                <camunda:entry key="authorization">Basic ${basicToken}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">grant_type=client_credentials</camunda:inputParameter>
            <camunda:outputParameter name="Output_1tcqe5d">
              <camunda:script scriptFormat="JavaScript">obj = JSON.parse(connector.getVariable('response'));
var execution = connector.getParentVariableScope();
execution.setVariable('tokenKC',obj.access_token);
execution.setVariable('refreshToken',obj.refresh_token);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0e948do</bpmn:incoming>
      <bpmn:outgoing>Flow_039x90x</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_039x90x" sourceRef="Activity_1uaqmis" targetRef="Gateway_18bmf32" />
    <bpmn:serviceTask id="Activity_066atkn" name="Get Customer Adress">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var contractId= execution.getVariable('contractId');
var url_crm= execution.getVariable('url_crm');
url_crm+'customers/contracts/'+contractId;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
                <camunda:entry key="authorization">Bearer ${tokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="adresseRS">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
print('get address from opencell api ' + resp);
var respStatusCode = connector.getVariable('statusCode')
print(respStatusCode );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/


if ( respStatusCode == 200 || respStatusCode == 201 || respStatusCode == 202 || respStatusCode == 204) {
 print('no error');

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

execution.setVariable('httpCodeADR',respStatusCode);
execution.setVariable('stateADR',"SUCCESS")
var obj = JSON.parse(response);
var adresse =(obj.contract[0].contract.address.postalCode!=null?obj.contract[0].contract.address.postalCode:'');
execution.setVariable('adresse',adresse);
var mode_gestion=false;
mode_gestion=(obj.contract[0].contract.temporaryDelegation)?obj.contract[0].contract.temporaryDelegation:obj.contract[0].contract.totalDelegation;
execution.setVariable('mode_gestion',mode_gestion);
var contract_status='ATT';
contract_status=obj.contract[0].contract.status;
execution.setVariable('contract_status',contract_status);
} else{
execution.setVariable('httpCodeADR',respStatusCode);
execution.setVariable('stateADR',"FAIL")
execution.setVariable('addresseObject',response);
execution.setVariable('adresse',null);
try {
     var obj1=JSON.parse(response);
     execution.setVariable('errorMSG',obj1.message);

    } catch (e) {
      execution.setVariable('errorMSG',response);
    }
execution.setVariable('api',"Get address from openCell");
/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Api Fail", context, response);
	newIncident.id
execution.setVariable('incidentId',newIncident.id);
print('incientId'+newIncident.id);
/*end create incident*/

 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_0j8stru" name="Get Emergency Contacts">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var contractId= execution.getVariable('contractId');
var url_crm= execution.getVariable('url_crm');
url_crm+'subscriptions/'+contractId+'/emergencyContacts';</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
                <camunda:entry key="authorization">Bearer ${tokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="contactObjectRS">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
print('send emergency contacts from opencell ' + resp);
var respStatusCode = connector.getVariable('statusCode')
print(respStatusCode );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/


if ( respStatusCode == 200 || respStatusCode == 201 || respStatusCode == 202 || respStatusCode == 204) {
 print('no error');

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

execution.setVariable('httpCodeContactObj',respStatusCode);
execution.setVariable('stateContactObj',"SUCCESS")
execution.setVariable('contactObject',response)
} else{
execution.setVariable('httpCodeContactObj',respStatusCode);
execution.setVariable('stateContactObj',"FAIL")
execution.setVariable('contactObject',response);
try {
     var obj1=JSON.parse(response);
     execution.setVariable('errorMSG',obj1.message);

    } catch (e) {
      execution.setVariable('errorMSG',response.replace(/\n|\r/g,''));
    }
execution.setVariable('api',"Get emergencyContacts from openCell");
/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Api Fail", context, response);
	newIncident.id
execution.setVariable('incidentId',newIncident.id);
print('incientId'+newIncident.id);
/*end create incident*/

 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
    </bpmn:serviceTask>
  </bpmn:process>
  <bpmn:error id="Error_0x8dd48" name="error_8dd" />
  <bpmn:error id="Error_1yr4vxx" />
  <bpmn:error id="Error_0uh24bo" name="Error_181l3vi" />
  <bpmn:error id="Error_1h32sh3" name="Error_181l3vi" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="tus.subprc.contract">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="242" y="222" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="156" y="268" width="67" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0wuaz81_di" bpmnElement="Event_18zy61z">
        <dc:Bounds x="1552" y="292" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_02js5su_di" bpmnElement="Activity_0p25yqr">
        <dc:Bounds x="690" y="270" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1qxyys0_di" bpmnElement="Gateway_1qxyys0" isMarkerVisible="true">
        <dc:Bounds x="975" y="285" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_18bmf32_di" bpmnElement="Gateway_18bmf32" isMarkerVisible="true">
        <dc:Bounds x="565" y="215" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rl1251_di" bpmnElement="Activity_170k84i">
        <dc:Bounds x="690" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1r0g0f5_di" bpmnElement="Activity_1r0g0f5">
        <dc:Bounds x="1090" y="270" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_14b4o2m_di" bpmnElement="Activity_14b4o2m">
        <dc:Bounds x="1240" y="270" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1coim6f_di" bpmnElement="Activity_1coim6f">
        <dc:Bounds x="1410" y="270" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1cujlpl_di" bpmnElement="Activity_1cujlpl">
        <dc:Bounds x="820" y="270" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1emjoyl_di" bpmnElement="Activity_1emjoyl" isExpanded="true">
        <dc:Bounds x="160" y="430" width="1010" height="363" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1wfyend_di" bpmnElement="Event_1wfyend">
        <dc:Bounds x="212" y="593" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_18wk5hc_di" bpmnElement="Event_18wk5hc">
        <dc:Bounds x="1112" y="593" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_01az17o_di" bpmnElement="Activity_01az17o">
        <dc:Bounds x="960" y="571" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0efks0r_di" bpmnElement="Gateway_0efks0r" isMarkerVisible="true">
        <dc:Bounds x="595" y="586" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0mb48po_di" bpmnElement="Activity_0mb48po">
        <dc:Bounds x="430" y="571" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_07o9jqb_di" bpmnElement="Activity_07o9jqb">
        <dc:Bounds x="760" y="690" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0cgytz1_di" bpmnElement="Event_0cgytz1">
        <dc:Bounds x="922" y="712" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0k4zyne_di" bpmnElement="Gateway_0k4zyne" isMarkerVisible="true">
        <dc:Bounds x="745" y="586" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_123yr8a_di" bpmnElement="Activity_123yr8a">
        <dc:Bounds x="800" y="440" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1xxnx21_di" bpmnElement="Gateway_1xxnx21" isMarkerVisible="true">
        <dc:Bounds x="885" y="586" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0vfinzd_di" bpmnElement="Activity_1jyy9oq">
        <dc:Bounds x="280" y="571" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1w2xf2f_di" bpmnElement="Event_1w2xf2f">
        <dc:Bounds x="672" y="593" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_17h0v6n_di" bpmnElement="Flow_17h0v6n">
        <di:waypoint x="1060" y="611" />
        <di:waypoint x="1112" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_05xibtr_di" bpmnElement="Flow_05xibtr">
        <di:waypoint x="248" y="611" />
        <di:waypoint x="280" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0dc0rpm_di" bpmnElement="Flow_0dc0rpm">
        <di:waypoint x="645" y="611" />
        <di:waypoint x="672" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0isjctg_di" bpmnElement="Flow_0isjctg">
        <di:waypoint x="530" y="611" />
        <di:waypoint x="595" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1cthnzh_di" bpmnElement="Flow_1cthnzh">
        <di:waypoint x="620" y="636" />
        <di:waypoint x="620" y="730" />
        <di:waypoint x="760" y="730" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_14t2ifu_di" bpmnElement="Flow_14t2ifu">
        <di:waypoint x="860" y="730" />
        <di:waypoint x="922" y="730" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1svbeul_di" bpmnElement="Flow_1svbeul">
        <di:waypoint x="770" y="586" />
        <di:waypoint x="770" y="480" />
        <di:waypoint x="800" y="480" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1rivvaf_di" bpmnElement="Flow_1rivvaf">
        <di:waypoint x="935" y="611" />
        <di:waypoint x="960" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_15t4i3r_di" bpmnElement="Flow_15t4i3r">
        <di:waypoint x="380" y="611" />
        <di:waypoint x="430" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1tb50dq_di" bpmnElement="Flow_1tb50dq">
        <di:waypoint x="795" y="611" />
        <di:waypoint x="885" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1qjvq0e_di" bpmnElement="Flow_1qjvq0e">
        <di:waypoint x="900" y="480" />
        <di:waypoint x="910" y="480" />
        <di:waypoint x="910" y="586" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0sjjcsv_di" bpmnElement="Flow_0sjjcsv">
        <di:waypoint x="708" y="611" />
        <di:waypoint x="745" y="611" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Activity_1uaqmis_di" bpmnElement="Activity_1uaqmis">
        <dc:Bounds x="350" y="200" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1fehdd7" bpmnElement="Activity_066atkn">
        <dc:Bounds x="1080" y="130" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_07qq114" bpmnElement="Activity_0j8stru">
        <dc:Bounds x="1240" y="130" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0e948do_di" bpmnElement="Flow_0e948do">
        <di:waypoint x="278" y="240" />
        <di:waypoint x="350" y="240" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="207" y="102" width="67" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_119m5f7_di" bpmnElement="Flow_119m5f7">
        <di:waypoint x="590" y="265" />
        <di:waypoint x="590" y="310" />
        <di:waypoint x="690" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16j4id9_di" bpmnElement="Flow_16j4id9">
        <di:waypoint x="1000" y="285" />
        <di:waypoint x="1000" y="120" />
        <di:waypoint x="790" y="120" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="930" y="221" width="60" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0p8sz6d_di" bpmnElement="Flow_0p8sz6d">
        <di:waypoint x="690" y="120" />
        <di:waypoint x="590" y="120" />
        <di:waypoint x="590" y="215" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0yb0bbe_di" bpmnElement="Flow_0yb0bbe">
        <di:waypoint x="1190" y="310" />
        <di:waypoint x="1240" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0lkj3xq_di" bpmnElement="Flow_0lkj3xq">
        <di:waypoint x="1510" y="310" />
        <di:waypoint x="1552" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0xr64r4_di" bpmnElement="Flow_0xr64r4">
        <di:waypoint x="920" y="310" />
        <di:waypoint x="975" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ltlkug_di" bpmnElement="Flow_0ltlkug">
        <di:waypoint x="1025" y="310" />
        <di:waypoint x="1090" y="310" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1012" y="248" width="70" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0kvrbdj_di" bpmnElement="Flow_0kvrbdj">
        <di:waypoint x="790" y="310" />
        <di:waypoint x="820" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1u4l0m2_di" bpmnElement="Flow_1u4l0m2">
        <di:waypoint x="1340" y="310" />
        <di:waypoint x="1410" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_039x90x_di" bpmnElement="Flow_039x90x">
        <di:waypoint x="450" y="240" />
        <di:waypoint x="565" y="240" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
