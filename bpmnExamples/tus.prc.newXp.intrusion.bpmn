<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bioc="http://bpmn.io/schema/bpmn/biocolor/1.0" xmlns:color="http://www.omg.org/spec/BPMN/non-normative/color/1.0" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1mrpvxi" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.32.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.20.0">
  <bpmn:collaboration id="Collaboration_1a8sclz">
    <bpmn:participant id="intrusion.infosCrm" name="Infos CRM" processRef="tus.prc.newXp.intrusion.infosCrm" />
    <bpmn:participant id="intrusion.main" name="Main" processRef="tus.prc.newXp.intrusion.main" />
    <bpmn:participant id="intrusion.end" name="End" processRef="tus.prc.newXp.intrusion.end" />
    <bpmn:participant id="intrusion.sendSms" name="Prepare and send sms" processRef="tus.prc.newXp.intrusion.sendSms" />
    <bpmn:participant id="intrusion.confirmedAlarm" name="Confirmed Alarm" processRef="tus.prc.newXp.intrusion.confirmedAlarm" />
    <bpmn:participant id="Participant_12a9rgr" name="New Experience TLS Intrusion" />
    <bpmn:participant id="intrusion.logoutKC" name="Logout Keycloak" processRef="tus.prc.newXp.intrusion.logoutKC" />
  </bpmn:collaboration>
  <bpmn:error id="Error_1ibkvly" name="combinedAction.common.exception" />
  <bpmn:signal id="Signal_156e1sa" name="combinedAction.logoutKc" />
  <bpmn:message id="Message_3jelclh" name="onMessageAdd" />
  <bpmn:message id="Message_0li05mu" name="toto" />
  <bpmn:signal id="Signal_2glvasr" name="delegation" />
  <bpmn:process id="tus.prc.newXp.intrusion.infosCrm" name="tus.prc.newXp.intrusion.infosCrm" isExecutable="true" camunda:versionTag="newXp.intrusion_0.12.1" camunda:historyTimeToLive="1">
    <bpmn:startEvent id="Event_1x2r53q">
      <bpmn:outgoing>Flow_09rg2oy</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_071wc61" signalRef="Signal_0o1h7gj" />
    </bpmn:startEvent>
    <bpmn:subProcess id="newXp.smoke.handleExceptions" name="Handle Exceptions" triggeredByEvent="true">
      <bpmn:startEvent id="newXp.intrusion.infosCrm.exception.startExceptions" name="Start exceptions">
        <bpmn:outgoing>Flow_1pbvdbk</bpmn:outgoing>
        <bpmn:errorEventDefinition id="ErrorEventDefinition_0n97hyq" errorRef="Error_0tidgvc" camunda:errorMessageVariable="newXp.infosCrm.exception" />
      </bpmn:startEvent>
      <bpmn:scriptTask id="newXp.intrusion.infosCrm.exception.setRetries" name="set retries" scriptFormat="JavaScript">
        <bpmn:incoming>Flow_1pbvdbk</bpmn:incoming>
        <bpmn:outgoing>Flow_1c4nhgz</bpmn:outgoing>
        <bpmn:script>var nbRetry= execution.getVariable("nbRetry");
if(nbRetry!=null){
nbRetry=nbRetry+1;
}else 
nbRetry=1;
execution.setVariable("nbRetry",nbRetry);
var duration=null;
switch(nbRetry){
case 1:
duration="PT15S";
break;
case 2:
duration="PT1M";
break;
case 3:
duration="PT2M"
break;
}
execution.setVariable("duration",duration);</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:exclusiveGateway id="Gateway_148moit">
        <bpmn:incoming>Flow_1c4nhgz</bpmn:incoming>
        <bpmn:outgoing>newXp.intrusion.infosCrm.exception.retryLower4</bpmn:outgoing>
        <bpmn:outgoing>newXp.intrusion.infosCrm.exception.retryGreater3</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:serviceTask id="newXp.intrusion.infosCrm.exception.sendMail" name="Send internal mail">
        <bpmn:extensionElements>
          <camunda:connector>
            <camunda:inputOutput>
              <camunda:inputParameter name="payload">
                <camunda:script scriptFormat="JavaScript">var alarme= execution.getVariable("type");
var process= "tus.prc.newXp.infosCrm";
var task = execution.getVariable('taskOnError');
var contrat = execution.getVariable("contractId");
var gateway = execution.getVariable("gatewayId");
var nbRetry = execution.getVariable('nbRetry')-1;
 '{"options": {"alarme":"'+alarme+'","process":"'+process+'","task":"'+task+'","contrat":"'+contrat +'", "gateway":"'+gateway +'", "nbRetry":"'+nbRetry +'"}}';</camunda:script>
              </camunda:inputParameter>
              <camunda:inputParameter name="headers">
                <camunda:map>
                  <camunda:entry key="Content-Type">application/json</camunda:entry>
                  <camunda:entry key="accept">application/json</camunda:entry>
                </camunda:map>
              </camunda:inputParameter>
              <camunda:inputParameter name="method">POST</camunda:inputParameter>
              <camunda:inputParameter name="url">
                <camunda:script scriptFormat="JavaScript">var mail = "team.usages@protectline.fr";
var workflow = "tus.prc.alarmManagement.intrusion";
var env= execution.getVariable('env');

var obj= '%5BCAMUNDA%5D%5B'+ env +'%5D%20Traitement%20non%20termin%C3%A9%20sur%20'+ workflow;
var from = "TUS";
var template = "tus-support-new";
var url_notif = execution.getVariable('url_notif');
url_notif+'/email?from='+from+'&amp;subject='+obj+'&amp;template='+ template +'&amp;to='+mail;</camunda:script>
              </camunda:inputParameter>
              <camunda:outputParameter name="response_send_internal_mail">
                <camunda:script scriptFormat="JavaScript" />
              </camunda:outputParameter>
            </camunda:inputOutput>
            <camunda:connectorId>http-connector</camunda:connectorId>
          </camunda:connector>
        </bpmn:extensionElements>
        <bpmn:incoming>newXp.intrusion.infosCrm.exception.retryGreater3</bpmn:incoming>
        <bpmn:outgoing>Flow_0y0hmyi</bpmn:outgoing>
      </bpmn:serviceTask>
      <bpmn:intermediateCatchEvent id="newXp.intrusion.infosCrm.exception.pause" name="pause">
        <bpmn:incoming>newXp.intrusion.infosCrm.exception.retryLower4</bpmn:incoming>
        <bpmn:outgoing>Flow_13t8623</bpmn:outgoing>
        <bpmn:timerEventDefinition id="TimerEventDefinition_1g3f60o">
          <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">${duration}</bpmn:timeDuration>
        </bpmn:timerEventDefinition>
      </bpmn:intermediateCatchEvent>
      <bpmn:scriptTask id="newXp.intrusion.infosCrm.exception.returnLastTask" name="Return to Last Task" scriptFormat="JavaScript">
        <bpmn:incoming>Flow_13t8623</bpmn:incoming>
        <bpmn:outgoing>Flow_1o8ot1l</bpmn:outgoing>
        <bpmn:script>print('Return to flow is Running');
var exceptions= execution.getVariable('alarmManagement.intrusion.exception');
if(exceptions== null){
print('No where to go back to');
}else{           execution.getProcessEngineServices().
getRuntimeService().createProcessInstanceModification(execution.getProcessInstanceId()).startBeforeActivity(exceptions).execute();
}</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:endEvent id="Event_0b13god">
        <bpmn:incoming>Flow_1o8ot1l</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_1pbvdbk" sourceRef="newXp.intrusion.infosCrm.exception.startExceptions" targetRef="newXp.intrusion.infosCrm.exception.setRetries" />
      <bpmn:sequenceFlow id="Flow_1c4nhgz" sourceRef="newXp.intrusion.infosCrm.exception.setRetries" targetRef="Gateway_148moit" />
      <bpmn:sequenceFlow id="newXp.intrusion.infosCrm.exception.retryLower4" name="retry &#60;4" sourceRef="Gateway_148moit" targetRef="newXp.intrusion.infosCrm.exception.pause">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${nbRetry&lt;= 3}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="newXp.intrusion.infosCrm.exception.retryGreater3" name="Retry &#62;3" sourceRef="Gateway_148moit" targetRef="newXp.intrusion.infosCrm.exception.sendMail">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${nbRetry&gt; 3}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="Flow_0y0hmyi" sourceRef="newXp.intrusion.infosCrm.exception.sendMail" targetRef="Event_1rbrndo" />
      <bpmn:sequenceFlow id="Flow_13t8623" sourceRef="newXp.intrusion.infosCrm.exception.pause" targetRef="newXp.intrusion.infosCrm.exception.returnLastTask" />
      <bpmn:sequenceFlow id="Flow_1o8ot1l" sourceRef="newXp.intrusion.infosCrm.exception.returnLastTask" targetRef="Event_0b13god" />
      <bpmn:endEvent id="Event_1rbrndo" name="Logout">
        <bpmn:incoming>Flow_0y0hmyi</bpmn:incoming>
        <bpmn:signalEventDefinition id="SignalEventDefinition_0wknytn" signalRef="Signal_1b28jph">
          <bpmn:extensionElements>
            <camunda:in variables="all" />
            <camunda:in businessKey="#{execution.processBusinessKey}" />
          </bpmn:extensionElements>
        </bpmn:signalEventDefinition>
      </bpmn:endEvent>
    </bpmn:subProcess>
    <bpmn:endEvent id="newXp.intrusion.infosCrm.signalToReturnMainProcess" name="Return main process">
      <bpmn:incoming>Flow_17js5vu</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0d6982q" signalRef="Signal_2ctlijd">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:serviceTask id="newXp.intrusion.infosCrm.getEmergencyContact" name="Get emergency Contact">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_emergency}emergencyContacts/v1/${contractId}/emergencyContacts</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="response get emergency contact from CRM">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')

print("Response status get emergency contact: "+respStatusCode);

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if (respStatusCode == 200) {

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

var obj = JSON.parse(resp);
execution.setVariable("mobilePhoneNumber", obj[0].mobilePhoneNumber);
execution.setVariable("title", obj[0].title);
execution.setVariable("firstName", obj[0].firstName);
execution.setVariable("lastName", obj[0].lastName);
}else{
print('Error to get alarmInfo from TB');
print('Message error : '+resp);
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Error to send Mail with Notification", context, response);
newIncident.id

//print('New incident : '+newIncident);
execution.setVariable('incidentId',newIncident.getId());
execution.setVariable('taskOnError', activityId);
print('incientId'+newIncident.id);
/*end create incident*/
 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1l7lst4</bpmn:incoming>
      <bpmn:outgoing>Flow_17js5vu</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="newXp.intrusion.infosCrm.getContract" name="Get contract Infos">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_crm}/contract/v1/${contractId}</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="response get contract from CRM">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')

print("Response status get contract: "+respStatusCode);

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if (respStatusCode == 200) {

/*solve incident if exist*/
print('incientId : '+execution.getVariable('incidentId'));
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

var obj = JSON.parse(resp);
execution.setVariable("statusContract", obj.status);
execution.setVariable("postalCode", obj.address.postalCode);
if(obj.temporaryDelegation || obj.totalDelegation){
execution.setVariable("delegation", true);
}else{
execution.setVariable("delegation", false);
}
}else{
print('Error to get alarmInfo from TB');
print('Message error : '+resp);
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Error to send Mail with Notification", context, response);
newIncident.id

//print('New incident : '+newIncident);
execution.setVariable('incidentId',newIncident.getId());
execution.setVariable('taskOnError', activityId);
print('incientId'+newIncident.id);
/*end create incident*/
 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1jliagl</bpmn:incoming>
      <bpmn:outgoing>Flow_1l7lst4</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:callActivity id="Activity_1e1s5ct" name="Authenticate KC" calledElement="${kcSubprocessId}">
      <bpmn:extensionElements>
        <camunda:in businessKey="#{execution.processBusinessKey}" />
        <camunda:in variables="all" />
        <camunda:out variables="all" />
        <camunda:inputOutput>
          <camunda:inputParameter name="action">authentication</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_09rg2oy</bpmn:incoming>
      <bpmn:outgoing>Flow_1jliagl</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:sequenceFlow id="Flow_09rg2oy" sourceRef="Event_1x2r53q" targetRef="Activity_1e1s5ct" />
    <bpmn:sequenceFlow id="Flow_17js5vu" sourceRef="newXp.intrusion.infosCrm.getEmergencyContact" targetRef="newXp.intrusion.infosCrm.signalToReturnMainProcess" />
    <bpmn:sequenceFlow id="Flow_1jliagl" sourceRef="Activity_1e1s5ct" targetRef="newXp.intrusion.infosCrm.getContract" />
    <bpmn:sequenceFlow id="Flow_1l7lst4" sourceRef="newXp.intrusion.infosCrm.getContract" targetRef="newXp.intrusion.infosCrm.getEmergencyContact" />
  </bpmn:process>
  <bpmn:process id="tus.prc.newXp.intrusion.main" name="tus.prc.newXp.intrusion.main" isExecutable="true" camunda:versionTag="newXp.intrusion_0.12.1" camunda:historyTimeToLive="1">
    <bpmn:serviceTask id="newXp.intrusion.main.getStateCrow" name="Get Panel state">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_device}gateways/${gatewayId}/state</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="GetDeviceState">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')

print("state of gateway crow: "+ resp );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if (respStatusCode == 200 || respStatusCode == 201 || respStatusCode == 202 || respStatusCode == 204) {
    var obj = JSON.parse(resp);
if("active" == obj.status){
execution.setVariable('gwState', false);
}else{
execution.setVariable('gwState', true);
}
} else {
    execution.setVariable('gwState', false);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_05tqs8h</bpmn:incoming>
      <bpmn:incoming>Flow_0cwibo7</bpmn:incoming>
      <bpmn:outgoing>Flow_1f9qvi0</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="newXp.intrusion.main.sendToEvent.technicalEvent.badAnswer" name="Send technical Event : bad answer">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.technicalEvent.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{  "type": "Réponse inappropriée '+execution.getVariable('contact')+' '+execution.getVariable('mobilePhoneNumber')+'",  "contractId": "'+execution.getVariable('contractId')+'",  "gatewayId": null,  "deviceId": null,  "source": null,  "location": null,  "datetimeGateway": "'+new Date().toISOString()+'",  "cid": "sms"}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send technical message kafka to event 'bad answer': "+respStatusCode + " " +resp);
var execution = connector.getParentVariableScope();
execution.setVariable("badAnswerFlow", true);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1par06q</bpmn:incoming>
      <bpmn:outgoing>Flow_05tqs8h</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_06qrt90" name="MHS détecté ?">
      <bpmn:incoming>Flow_1f9qvi0</bpmn:incoming>
      <bpmn:outgoing>newXp.intrusion.main.stateInactive</bpmn:outgoing>
      <bpmn:outgoing>newXp.intrusion.main.stateActive</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:parallelGateway id="Gateway_1e6138u">
      <bpmn:incoming>Flow_001igmn</bpmn:incoming>
      <bpmn:outgoing>Flow_1xsh4hi</bpmn:outgoing>
      <bpmn:outgoing>Flow_0i8d2tw</bpmn:outgoing>
      <bpmn:outgoing>Flow_0k81s65</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:serviceTask id="newXp.intrusion.main.sendToEvent.technicalEvent.customerIsNotOriginator" name="Send technical Event : Customer is not originator">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.technicalEvent.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{  "type": "Client ne traite pas l\'alerte intrusion '+execution.getVariable('contact')+' '+execution.getVariable('mobilePhoneNumber')+'",  "contractId": "'+execution.getVariable('contractId')+'",  "gatewayId": null,  "deviceId": null,  "source": null,  "location": null,  "datetimeGateway": "'+new Date().toISOString()+'",  "cid": "sms"}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send technical message kafka to event ' customer is not originator' : "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1eoxeup</bpmn:incoming>
      <bpmn:outgoing>Flow_001igmn</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:intermediateCatchEvent id="Event_1wl9jpw" name="Diff temps ">
      <bpmn:incoming>newXp.intrusion.main.badAnswer</bpmn:incoming>
      <bpmn:outgoing>Flow_1par06q</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_02gpu0b">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">${diffTimerBadAnswer}</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:serviceTask id="Activity_1lopwq8" name="Update lastSupport and lastWhoSupport">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">var details = JSON.parse(execution.getVariable("detailsAlarm"));
var alarmId= execution.getVariable("alarmId");
var detailsAdd = JSON.parse('{"lastSupport" : "'+Date.now()+'", "lastWhoSupport": "CTS"}');

var mergedDetails = {...details, ...detailsAdd};

'{"id": "'+alarmId+'", "details": '+JSON.stringify(mergedDetails)+'}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response create or update alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api create/update alarm intrusion: "+respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>newXp.main.answerIsNo</bpmn:incoming>
      <bpmn:outgoing>Flow_1eoxeup</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_1gldwa1">
      <bpmn:extensionElements />
      <bpmn:incoming>Flow_16gzdhz</bpmn:incoming>
      <bpmn:outgoing>newXp.intrusion.main.goodAnswer</bpmn:outgoing>
      <bpmn:outgoing>newXp.intrusion.main.badAnswer</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:task id="Activity_0c74ddz" name="Set date to search event">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="Input_2lkpfnr">
            <camunda:script scriptFormat="Javascript">
var dateServerEnd = new Date().toISOString().split(".")[0]+'Z';
var calcDateMinus5Min = new Date().setMinutes(new Date().getMinutes() - 5);
var dateServerStart = new Date(calcDateMinus5Min).toISOString().split(".")[0]+'Z';

execution.setVariable("dateServerStart", dateServerStart);
execution.setVariable("dateServerEnd", dateServerEnd);
</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0tr0axn</bpmn:incoming>
      <bpmn:incoming>Flow_0svfl96</bpmn:incoming>
      <bpmn:outgoing>Flow_0xedf4f</bpmn:outgoing>
    </bpmn:task>
    <bpmn:serviceTask id="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswerGwInactive" name="Send technical Event : No answer">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.technicalEvent.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{  "type": "Pas de réponse '+execution.getVariable('contact')+' '+execution.getVariable('mobilePhoneNumber')+'",  "contractId": "'+execution.getVariable('contractId')+'",  "gatewayId": null,  "deviceId": null,  "source": null,  "location": null,  "datetimeGateway": "'+new Date().toISOString()+'",  "cid": "sms"}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send technical message kafka to event 'no answer' when gw is inactive: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1smjr1n</bpmn:incoming>
      <bpmn:outgoing>Flow_0tr0axn</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_1hmqiup">
      <bpmn:incoming>newXp.intrusion.main.stateInactive</bpmn:incoming>
      <bpmn:outgoing>Flow_1smjr1n</bpmn:outgoing>
      <bpmn:outgoing>Flow_0svfl96</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:endEvent id="newXp.intrusion.main.SignalToSendSms40" name="Send SMS 40">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="set body sms">
            <camunda:script scriptFormat="Javascript">execution.setVariable("bodyMessage", execution.getVariable('bodyMessageConversation40'));</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0i8d2tw</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0edsb0q" signalRef="Signal_3j095fc">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:endEvent id="Event_1gf280u" name="Confirmed Alarm">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="Input_0r9o4ts">
            <camunda:script scriptFormat="Javascript">execution.setVariable('withWaitingMessage', false);</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1xsh4hi</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_01ecgsp" signalRef="Signal_0jko34k">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:endEvent id="Event_1sp3x8k" name="End">
      <bpmn:incoming>Flow_1pk1nwr</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1fxm4xj" signalRef="Signal_2iu5rha">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:intermediateCatchEvent id="Event_1pqusz8">
      <bpmn:incoming>Flow_0k81s65</bpmn:incoming>
      <bpmn:outgoing>Flow_1pk1nwr</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_033lxua">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT5S</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:sendTask id="newXp.intrusion.main.createConversationSms10" name="Create conversation SMS 10">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_notif}/conversation</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">${bodyMessageConversation10}</camunda:inputParameter>
            <camunda:outputParameter name="response create conversation">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response api create conversation : " + respStatusCode);
var execution = connector.getParentVariableScope();
execution.setVariable("startTimer", Date.now());
execution.setVariable("statusCodeNotif", respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0bmrak6</bpmn:incoming>
      <bpmn:outgoing>Flow_0f7v69y</bpmn:outgoing>
    </bpmn:sendTask>
    <bpmn:exclusiveGateway id="Gateway_0vlxoi7">
      <bpmn:extensionElements />
      <bpmn:incoming>Flow_0sj72vu</bpmn:incoming>
      <bpmn:outgoing>Flow_1o0q7m5</bpmn:outgoing>
      <bpmn:outgoing>Flow_0cwibo7</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:intermediateCatchEvent id="Event_0co4e2v">
      <bpmn:incoming>Flow_1o0q7m5</bpmn:incoming>
      <bpmn:outgoing>Flow_09rb81x</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_0xt1k5r">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT5S</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:scriptTask id="Activity_0ld02a4" name="set try to poll" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_03eo4pp</bpmn:incoming>
      <bpmn:incoming>Flow_1vaxp9p</bpmn:incoming>
      <bpmn:outgoing>Flow_0sj72vu</bpmn:outgoing>
      <bpmn:script>var tryPolling= execution.getVariable("tryPolling");
var toPoll=false;
if(tryPolling!=null){
tryPolling=tryPolling+1;
}else{
tryPolling=1;
}

if(tryPolling &lt; 15){
toPoll = true;
}
execution.setVariable("tryPolling",tryPolling);
execution.setVariable("toPoll",toPoll);
</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:serviceTask id="Activity_1tl4v1h" name="Polling reponse sms">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_notif}/conversation/${telCustomer}/message?from=${supplier}&amp;startDate=${startDate}</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="polling information from customer number">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response api get info (polling) : " + respStatusCode);
var execution = connector.getParentVariableScope();
execution.setVariable("startTimer", Date.now());

if ( respStatusCode == 200) {
var obj = JSON.parse(resp);
if (obj &amp;&amp; obj.conversationId !== undefined &amp;&amp; obj.conversationId !== null) {
  execution.setVariable("conversationId", obj.conversationId);
}else{
execution.setVariable("conversationId", "");
}
if(obj.body != null){
execution.setVariable("isAnswer", true);
execution.setVariable("body", obj.body);
}else{
execution.setVariable("isAnswer", false);
}
}else{
print('Error to get information '+resp);
execution.setVariable("isAnswer", false);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_09rb81x</bpmn:incoming>
      <bpmn:outgoing>Flow_1o9543s</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_153y67e">
      <bpmn:incoming>Flow_1o9543s</bpmn:incoming>
      <bpmn:outgoing>Flow_10820mx</bpmn:outgoing>
      <bpmn:outgoing>Flow_03eo4pp</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="confirmedAlarm.intrusion.kafkaUtil.tracability" name="Send message Kafka for tracability">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "NOTIFIED","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'",  "notificationDate":"'+new Date().toISOString()+'",  "notificationType":"smsConversationnel"}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0f7v69y</bpmn:incoming>
      <bpmn:outgoing>Flow_1vaxp9p</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_00u3ah0" name="Send message Kafka for tracability">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "NOTIFIED","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'",  "notificationDate":"'+new Date().toISOString()+'",  "notificationType":"sms"}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0qikdsj</bpmn:incoming>
      <bpmn:outgoing>Flow_1l8qta3</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sendTask id="newXp.intrusion.main.sendSms300" name="Send message 300">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_notif}/sms?destinationNumber=${telCustomer}&amp;template=${nameTemplateSMS300}&amp;from=${sender}</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">${bodyMessageSMS300}</camunda:inputParameter>
            <camunda:outputParameter name="response send message 300">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response api send message 350 : " + respStatusCode);

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if (respStatusCode == 201) {

/*solve incident if exist*/
	if (execution.getVariable('incidentId')!=null){
		execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
		execution.setVariable('incidentId',null);
	}
}else{
print('Error to send sms 350');
print('Message error : '+resp);
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Error to send sms 350", context, response);
newIncident.id

execution.setVariable('incidentId',newIncident.getId());
execution.setVariable('taskOnError', activityId);
/*end create incident*/
 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0lckyaw</bpmn:incoming>
      <bpmn:outgoing>Flow_0qikdsj</bpmn:outgoing>
    </bpmn:sendTask>
    <bpmn:serviceTask id="Activity_1i2lv7h" name="Tracability EXPECTEDNOTIFICATION to true" camunda:asyncBefore="true">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDNOTIFICATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedNotification":true}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à True: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1gvdey2</bpmn:incoming>
      <bpmn:outgoing>Flow_0lckyaw</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="newXp.smoke.delegation.main.thingsboard.ackAlarm" name="Ack alarm">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb}api/alarm/${alarmId}/ack</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="X-Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="response ack alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api ack alarm: "+respStatusCode);

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if (respStatusCode == 200) {

/*solve incident if exist*/
	if (execution.getVariable('incidentId')!=null){
		execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
		execution.setVariable('incidentId',null);
	}
}else{
print('Error to ack alarm');
print('Message error : '+resp);
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Error to ack alarm", context, response);
newIncident.id

execution.setVariable('incidentId',newIncident.getId());
execution.setVariable('taskOnError', activityId);
/*end create incident*/
 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1l8qta3</bpmn:incoming>
      <bpmn:outgoing>Flow_0o9mn37</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:endEvent id="Event_1lyfz58" name="end Process">
      <bpmn:incoming>Flow_0o9mn37</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0zvvt5c" signalRef="Signal_2iu5rha">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:endEvent id="newXp.main.signalToGetInfosFromCRM" name="Get Infos from CRM">
      <bpmn:incoming>Flow_1pd6wu6</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_18rwfnf" signalRef="Signal_0o1h7gj">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:startEvent id="Event_0r5u2j4">
      <bpmn:outgoing>Flow_1pd6wu6</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:exclusiveGateway id="Gateway_1w6yqtg">
      <bpmn:incoming>Flow_15yt90p</bpmn:incoming>
      <bpmn:outgoing>newXp.intrusion.main.alarmActive</bpmn:outgoing>
      <bpmn:outgoing>newXp.intrusion.main.noAlarmActive</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:exclusiveGateway id="Gateway_02e5ak3">
      <bpmn:incoming>newXp.intrusion.main.alarmActive</bpmn:incoming>
      <bpmn:outgoing>newXp.intrusion.main.alarmLower3Min</bpmn:outgoing>
      <bpmn:outgoing>newXp.intrusion.main.alarmGreater3Min</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:scriptTask id="newXp.intrusion.main.filterActiveAlarmIntrusion" name="Filter alarm active Intrusion" scriptFormat="Javascript">
      <bpmn:incoming>Flow_0o5h0bk</bpmn:incoming>
      <bpmn:outgoing>Flow_1rhq9nx</bpmn:outgoing>
      <bpmn:script>var lastSupport;
var lastWhoSupport;
var diff;
var dateSystem = new Date();
var list = JSON.parse(execution.getVariable("alarmList"));
var toHandle;
var alarmActive = false;
var alarmId;
if(list != null){
	for(var i = 0; i &lt;list.length; i++){
		if(list[i].type.includes("simpleIntrusion")){
			alarmActive = true;
execution.setVariable("alarmId", list[i].id);
			lastSupport = list[i].details.lastSupport;
			lastWhoSupport = list[i].details.lastWhoSupport;
			diff = (dateSystem - lastSupport)/1000;
				if(diff&lt; 180){
					toHandle = false;
					lastWhoSupport = list[i].details.lastWhoSupport;
				}else{
				toHandle = true;
			}
		break;
		}
}
}

execution.setVariable("lastSupport ", lastSupport);
execution.setVariable("lastWhoSupport", lastWhoSupport);
execution.setVariable("toHandle", toHandle);
execution.setVariable("alarmActive", alarmActive);</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:task id="newXp.intrusion.main.setAllVariables" name="Set All variables">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="Input_2lkpfnr">
            <camunda:script scriptFormat="Javascript">var contact = "contact 1";
var contractId = execution.getVariable('contractId');
var destinationNumber = execution.getVariable('mobilePhoneNumber');
var messageType = "smsConv";
var messageId = execution.getProcessInstanceId();
var from = execution.getVariable('supplier');
var alarmType= 'intrusion';
var alarmTime = execution.getVariable('dateTimeGateway');
var secretCode = execution.getVariable('secretCode');
var phoneTLS;
var telCustomer = execution.getVariable('mobilePhoneNumber').replace('+', '%2B');
var zipCode= execution.getVariable('postalCode');
var dateTimeGatewayIso = execution.getVariable("dateTimeGatewayIso").split('Z')[0];

var dateTimeGw = dateTimeGatewayIso+'.000Z';
var lastWhoSupport = execution.getVariable('lastWhoSupport');
var brand;
var user = "principal";

if("Groupama" == supplier){
execution.setVariable("sender", "Groupama");
brand = "Groupama Box Habitat";
phoneTLS = execution.getVariable('msPhoneNumberGRP');
}else{
execution.setVariable("sender", "MProtegee");
brand = "Orange Maison Protégée";
phoneTLS = execution.getVariable('msPhoneNumberORG');
}

var optionConversation10 = '{"brand": "'+brand+'", "localisation": "'+execution.getVariable("location")+'", "zipCode":"'+zipCode+'"}';
var bodyMessageConversation10 = '{"contact": "'+contact+'","contractId": "'+contractId+'","destinationNumber": "'+destinationNumber+'","messageType": "'+messageType+'","option": '+optionConversation10+',"templateId": "TUS_TSBV2_NEXP_SMS_10", "from": "'+from+'","messageId": "'+messageId+'"}'

var optionConversation20 = '{"brand": "'+brand+'", "monitoringStationPhoneNumber":"'+phoneTLS+'", "acknowledgeCode": "'+secretCode+'"}';
var bodyMessageConversation20 = '{"contact": "'+contact+'","contractId": "'+contractId+'","destinationNumber": "'+destinationNumber+'","messageType": "'+messageType+'","option": '+optionConversation20+',"templateId": "TUS_TSBV2_NEXP_SMS_20", "from": "'+from+'","messageId": "'+messageId+'"}'

var optionConversation30 = '{"brand": "'+brand+'", "user": "'+user+'", "monitoringStationPhoneNumber":"'+phoneTLS+'", "acknowledgeCode": "'+secretCode+'"}';
var bodyMessageConversation30 = '{"contact": "'+contact+'","contractId": "'+contractId+'","destinationNumber": "'+destinationNumber+'","messageType": "'+messageType+'","option": '+optionConversation30+',"templateId": "TUS_TSBV2_NEXP_SMS_30", "from": "'+from+'","messageId": "'+messageId+'"}'

var optionConversation40 = '{"brand": "'+brand+'", "monitoringStationPhoneNumber":"'+phoneTLS+'", "acknowledgeCode": "'+secretCode+'"}';
var bodyMessageConversation40 = '{"contact": "'+contact+'","contractId": "'+contractId+'","destinationNumber": "'+destinationNumber+'","messageType": "'+messageType+'","option": '+optionConversation40+',"templateId": "TUS_TSBV2_NEXP_SMS_40", "from": "'+from+'","messageId": "'+messageId+'"}'

var bodyMessageSMS300 = '{"gatewayId":"'+gatewayId+'","source":"'+source+'","deviceId":"'+deviceId+'","location":"'+location+'","contractId":"'+contractId+'","contact":"'+contact+'","options": {"alarmType":"'+alarmType+'","AcknowledgeCode":"'+secretCode+'","monitoringStationPhoneNumber":"'+phoneTLS+'","alarmTime":"'+alarmTime+'"}}';

var details = '{"eventId": "'+execution.getVariable("eventId")+'","id":"'+execution.getVariable("eventId")+'", "dateTimeGateway": "'+dateTimeGw+'","dateTimeTB": "'+execution.getVariable("dateTimeTB")+'","label": "'+execution.getVariable("label")+'","source": "'+execution.getVariable("source")+'","type": "'+execution.getVariable("type")+'","deviceId": "'+execution.getVariable("deviceId")+'","contractId": "'+contractId+'","location": "'+execution.getVariable("location")+'","user": "'+execution.getVariable("user")+'","gatewayId": "'+execution.getVariable("gatewayId")+'","cid": "'+execution.getVariable("cid")+'","typeAlarm": "'+execution.getVariable("type")+'","severity": "MAJOR", "lastSupport" : "'+Date.now()+'", "lastWhoSupport": "'+lastWhoSupport+'"}'

function uuidv4() { 
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'
    .replace(/[xy]/g, function (c) { 
        const r = Math.random() * 16 | 0,  
            v = c == 'x' ? r : (r &amp; 0x3 | 0x8); 
        return v.toString(16); 
    }); 
}

execution.setVariable("uuidTracability", uuidv4());
execution.setVariable("detailsAlarm", details);
execution.setVariable("bodyMessageConversation10", bodyMessageConversation10);
execution.setVariable("bodyMessageConversation20", bodyMessageConversation20);
execution.setVariable("bodyMessageConversation30", bodyMessageConversation30);
execution.setVariable("bodyMessageConversation40", bodyMessageConversation40);
execution.setVariable("bodyMessageSMS300",bodyMessageSMS300);
execution.setVariable("nameTemplateSMS300",'TUS_TSBV2_SMS_300');
execution.setVariable("badAnswerFlow", false);
execution.setVariable("telCustomer", telCustomer);
execution.setVariable("contact", contact);
execution.setVariable("startDate", dateTimeGatewayIso);
execution.setVariable("from", supplier);
</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1rhq9nx</bpmn:incoming>
      <bpmn:outgoing>Flow_15yt90p</bpmn:outgoing>
    </bpmn:task>
    <bpmn:serviceTask id="newXp.intrusion.main.tbFacade.getAsset" name="Get asset From Tb-Facade">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/asset/${contractId}</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="Response_Tb_facade_get_asset">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print('get asset : '+respStatusCode );

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if ( respStatusCode == 200) {
/*solve incident if exist*/
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}

var obj = JSON.parse(response);
execution.setVariable("entityId", obj.id);
execution.setVariable("tenantId", obj.tenantId);
}else{
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Error to send Mail with Notification", context, response);
newIncident.id
execution.setVariable('incidentId',newIncident.getId());
execution.setVariable('taskOnError', activityId);
/*end create incident*/
 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_01ux8m5</bpmn:incoming>
      <bpmn:outgoing>Flow_1s6r17b</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:startEvent id="newXp.main.startProcess">
      <bpmn:outgoing>Flow_01ux8m5</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_11jquwv" signalRef="Signal_2ctlijd" />
    </bpmn:startEvent>
    <bpmn:endEvent id="Event_027fkv9">
      <bpmn:incoming>Flow_1flaio7</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0aysh23" signalRef="Signal_1b28jph">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Activity_0o9u4ow" name="Tracability EXPECTEDNOTIFICATION to false">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDNOTIFICATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedNotification":false}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à false: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>newXp.intrusion.main.alarmLower3Min</bpmn:incoming>
      <bpmn:outgoing>Flow_0aymv4p</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_1936ljl" name="Tracability EXPECTEDMONITORINGSTATION to false">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDMONITORINGSTATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedMonitoringStation":false}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à True: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0aymv4p</bpmn:incoming>
      <bpmn:outgoing>Flow_1flaio7</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_05tqs8h" sourceRef="newXp.intrusion.main.sendToEvent.technicalEvent.badAnswer" targetRef="newXp.intrusion.main.getStateCrow" />
    <bpmn:sequenceFlow id="Flow_0cwibo7" sourceRef="Gateway_0vlxoi7" targetRef="newXp.intrusion.main.getStateCrow">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!toPoll}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1f9qvi0" sourceRef="newXp.intrusion.main.getStateCrow" targetRef="Gateway_06qrt90" />
    <bpmn:sequenceFlow id="Flow_1par06q" sourceRef="Event_1wl9jpw" targetRef="newXp.intrusion.main.sendToEvent.technicalEvent.badAnswer" />
    <bpmn:sequenceFlow id="newXp.intrusion.main.stateActive" name="True / Inactive" sourceRef="Gateway_06qrt90" targetRef="Activity_06r300u">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!gwState}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.intrusion.main.stateInactive" name="False / Active" sourceRef="Gateway_06qrt90" targetRef="Gateway_1hmqiup">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${gwState}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0a58a0f" sourceRef="Activity_06r300u" targetRef="Gateway_0xl21pe" />
    <bpmn:sequenceFlow id="Flow_001igmn" sourceRef="newXp.intrusion.main.sendToEvent.technicalEvent.customerIsNotOriginator" targetRef="Gateway_1e6138u" />
    <bpmn:sequenceFlow id="Flow_1xsh4hi" sourceRef="Gateway_1e6138u" targetRef="Event_1gf280u" />
    <bpmn:sequenceFlow id="Flow_0k81s65" sourceRef="Gateway_1e6138u" targetRef="Event_1pqusz8" />
    <bpmn:sequenceFlow id="Flow_0i8d2tw" sourceRef="Gateway_1e6138u" targetRef="newXp.intrusion.main.SignalToSendSms40" />
    <bpmn:sequenceFlow id="Flow_03iew5h" sourceRef="newXp.intrusion.main.sendToEvent.technicalEvent.handleByCustomer" targetRef="Gateway_09b9mpu" />
    <bpmn:sequenceFlow id="Flow_1eoxeup" sourceRef="Activity_1lopwq8" targetRef="newXp.intrusion.main.sendToEvent.technicalEvent.customerIsNotOriginator" />
    <bpmn:sequenceFlow id="Flow_16lmlsc" sourceRef="Activity_0hn8ng5" targetRef="newXp.intrusion.main.sendToEvent.technicalEvent.handleByCustomer" />
    <bpmn:sequenceFlow id="newXp.intrusion.main.badAnswer" name="Bad answer" sourceRef="Gateway_1gldwa1" targetRef="Event_1wl9jpw">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!answerCustomer}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.main.answerIsNo" name="No" sourceRef="Gateway_05uabig" targetRef="Activity_1lopwq8">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${answerValue == "non"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.main.answerIsYes" name="Yes" sourceRef="Gateway_05uabig" targetRef="Activity_0sj24lp">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${answerValue == "oui"}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.intrusion.main.goodAnswer" name="Good answer" sourceRef="Gateway_1gldwa1" targetRef="Gateway_05uabig">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${answerCustomer}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_16gzdhz" sourceRef="newXp.intrusion.main.checkAnswer" targetRef="Gateway_1gldwa1" />
    <bpmn:sequenceFlow id="Flow_13px4ab" sourceRef="newXp.intrusion.main.event.getLastEventMHS" targetRef="Activity_06gfzpr" />
    <bpmn:sequenceFlow id="Flow_0tr0axn" sourceRef="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswerGwInactive" targetRef="Activity_0c74ddz" />
    <bpmn:sequenceFlow id="Flow_0svfl96" name="Bad answer" sourceRef="Gateway_1hmqiup" targetRef="Activity_0c74ddz">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${badAnswerFlow}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0xedf4f" sourceRef="Activity_0c74ddz" targetRef="newXp.intrusion.main.event.getLastEventMHS" />
    <bpmn:sequenceFlow id="Flow_1smjr1n" sourceRef="Gateway_1hmqiup" targetRef="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswerGwInactive">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!badAnswerFlow}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1pk1nwr" sourceRef="Event_1pqusz8" targetRef="Event_1sp3x8k" />
    <bpmn:sequenceFlow id="Flow_0bmrak6" sourceRef="Activity_0saaqf1" targetRef="newXp.intrusion.main.createConversationSms10" />
    <bpmn:sequenceFlow id="Flow_0f7v69y" sourceRef="newXp.intrusion.main.createConversationSms10" targetRef="confirmedAlarm.intrusion.kafkaUtil.tracability" />
    <bpmn:sequenceFlow id="Flow_0sj72vu" sourceRef="Activity_0ld02a4" targetRef="Gateway_0vlxoi7" />
    <bpmn:sequenceFlow id="Flow_1o0q7m5" sourceRef="Gateway_0vlxoi7" targetRef="Event_0co4e2v">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${toPoll}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_09rb81x" sourceRef="Event_0co4e2v" targetRef="Activity_1tl4v1h" />
    <bpmn:sequenceFlow id="Flow_03eo4pp" sourceRef="Gateway_153y67e" targetRef="Activity_0ld02a4">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!isAnswer}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1vaxp9p" sourceRef="confirmedAlarm.intrusion.kafkaUtil.tracability" targetRef="Activity_0ld02a4" />
    <bpmn:sequenceFlow id="Flow_1o9543s" sourceRef="Activity_1tl4v1h" targetRef="Gateway_153y67e" />
    <bpmn:sequenceFlow id="Flow_10820mx" sourceRef="Gateway_153y67e" targetRef="newXp.intrusion.main.checkAnswer">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${isAnswer}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0qikdsj" sourceRef="newXp.intrusion.main.sendSms300" targetRef="Activity_00u3ah0" />
    <bpmn:sequenceFlow id="Flow_1l8qta3" sourceRef="Activity_00u3ah0" targetRef="newXp.smoke.delegation.main.thingsboard.ackAlarm" />
    <bpmn:sequenceFlow id="Flow_0lckyaw" sourceRef="Activity_1i2lv7h" targetRef="newXp.intrusion.main.sendSms300" />
    <bpmn:sequenceFlow id="Flow_1gvdey2" name="true" sourceRef="Gateway_0r5rlr9" targetRef="Activity_1i2lv7h">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${delegation}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0o9mn37" sourceRef="newXp.smoke.delegation.main.thingsboard.ackAlarm" targetRef="Event_1lyfz58" />
    <bpmn:sequenceFlow id="Flow_1pd6wu6" sourceRef="Event_0r5u2j4" targetRef="newXp.main.signalToGetInfosFromCRM" />
    <bpmn:sequenceFlow id="Flow_15yt90p" sourceRef="newXp.intrusion.main.setAllVariables" targetRef="Gateway_1w6yqtg" />
    <bpmn:sequenceFlow id="newXp.intrusion.main.noAlarmActive" name="No Alarm active" sourceRef="Gateway_1w6yqtg" targetRef="newXp.intrusion.main.createAlarm">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!alarmActive}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.intrusion.main.alarmActive" name="Alarm active" sourceRef="Gateway_1w6yqtg" targetRef="Gateway_02e5ak3">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${alarmActive}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.intrusion.main.alarmGreater3Min" name="Alarm &#62; 3 min" sourceRef="Gateway_02e5ak3" targetRef="newXp.intrusion.main.updateAlarm">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${toHandle}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="newXp.intrusion.main.alarmLower3Min" name="Alarm &#60; 3 min" sourceRef="Gateway_02e5ak3" targetRef="Activity_0o9u4ow">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!toHandle}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0o5h0bk" sourceRef="newXp.intrusion.main.tb-facade.getActiveAlarm" targetRef="newXp.intrusion.main.filterActiveAlarmIntrusion" />
    <bpmn:sequenceFlow id="Flow_1rhq9nx" sourceRef="newXp.intrusion.main.filterActiveAlarmIntrusion" targetRef="newXp.intrusion.main.setAllVariables" />
    <bpmn:sequenceFlow id="Flow_1s6r17b" sourceRef="newXp.intrusion.main.tbFacade.getAsset" targetRef="newXp.intrusion.main.tb-facade.getActiveAlarm" />
    <bpmn:sequenceFlow id="Flow_01ux8m5" sourceRef="newXp.main.startProcess" targetRef="newXp.intrusion.main.tbFacade.getAsset" />
    <bpmn:sequenceFlow id="Flow_19s5kbh" sourceRef="newXp.intrusion.main.createAlarm" targetRef="Gateway_0r5rlr9" />
    <bpmn:sequenceFlow id="Flow_0rchavp" sourceRef="newXp.intrusion.main.updateAlarm" targetRef="Gateway_0r5rlr9" />
    <bpmn:sequenceFlow id="Flow_1flaio7" sourceRef="Activity_1936ljl" targetRef="Event_027fkv9" />
    <bpmn:sequenceFlow id="Flow_0aymv4p" sourceRef="Activity_0o9u4ow" targetRef="Activity_1936ljl" />
    <bpmn:endEvent id="newXp.intrusion.main.SignalToConfirmedAlarmStateActive" name="Confirmed Alarm">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="Input_0r9o4ts">
            <camunda:script scriptFormat="Javascript">execution.setVariable('withWaitingMessage', true);</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_06idoqu</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0rt4wl3" signalRef="Signal_0jko34k">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:exclusiveGateway id="Gateway_1av8n57">
      <bpmn:incoming>Flow_1o109jy</bpmn:incoming>
      <bpmn:outgoing>Flow_1g64wn4</bpmn:outgoing>
      <bpmn:outgoing>Flow_1p8x1di</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:parallelGateway id="Gateway_0xl21pe">
      <bpmn:incoming>Flow_0a58a0f</bpmn:incoming>
      <bpmn:outgoing>Flow_06idoqu</bpmn:outgoing>
      <bpmn:outgoing>Flow_1o109jy</bpmn:outgoing>
      <bpmn:outgoing>Flow_0wbj18i</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:endEvent id="newXp.intrusion.main.SignalToSendSms40.activeAlarm" name="Send SMS 40">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="set body sms">
            <camunda:script scriptFormat="Javascript">execution.setVariable("bodyMessage", execution.getVariable('bodyMessageConversation40'));</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0wbj18i</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0ymokr6" signalRef="Signal_3j095fc">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:endEvent id="Event_1cmx0er" name="End">
      <bpmn:incoming>Flow_1b63gvc</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0qjmreq" signalRef="Signal_2iu5rha">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:intermediateCatchEvent id="Event_04qcc5u">
      <bpmn:incoming>Flow_1g64wn4</bpmn:incoming>
      <bpmn:outgoing>Flow_1b63gvc</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_0e0690c">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT5S</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:scriptTask id="Activity_0c4tzi4" name="set try to poll" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_1p8x1di</bpmn:incoming>
      <bpmn:incoming>Flow_1wmojbv</bpmn:incoming>
      <bpmn:outgoing>Flow_0p3u9a0</bpmn:outgoing>
      <bpmn:script>var tryPolling2= execution.getVariable("tryPolling2");
var toPoll2=false;
if(tryPolling2!=null){
tryPolling2=tryPolling2+1;
}else{
tryPolling2=1;
}

if(tryPolling2 &lt; 19){
toPoll2= true;
}
execution.setVariable("tryPolling2",tryPolling2);
execution.setVariable("toPoll2",toPoll2);</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:exclusiveGateway id="Gateway_0gd3bsl">
      <bpmn:incoming>Flow_0p3u9a0</bpmn:incoming>
      <bpmn:outgoing>Flow_19829pg</bpmn:outgoing>
      <bpmn:outgoing>Flow_1pohp0o</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswer" name="Send technical Event : No answer">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.technicalEvent.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{  "type": "Pas de réponse '+execution.getVariable('contact')+' '+execution.getVariable('mobilePhoneNumber')+'",  "contractId": "'+execution.getVariable('contractId')+'",  "gatewayId": null,  "deviceId": null,  "source": null,  "location": null,  "datetimeGateway": "'+new Date().toISOString()+'",  "cid": "sms"}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send technical message kafka to event 'no answer': "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_19829pg</bpmn:incoming>
      <bpmn:outgoing>Flow_11attnb</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:endEvent id="Event_0qdvdug" name="End">
      <bpmn:incoming>Flow_11attnb</bpmn:incoming>
      <bpmn:incoming>Flow_12cce9e</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1h2hkzj" signalRef="Signal_2iu5rha">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:serviceTask id="newXp.intrusion.main.sendToEvent.technicalEvent.delayAnswer" name="Send technical Event : Delay answer">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.technicalEvent.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{  "type": "Réponse tardive '+execution.getVariable('contact')+' '+execution.getVariable('mobilePhoneNumber')+'",  "contractId": "'+execution.getVariable('contractId')+'",  "gatewayId": null,  "deviceId": null,  "source": null,  "location": null,  "datetimeGateway": "'+new Date().toISOString()+'",  "cid": "sms"}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send technical message kafka to event 'delay answer': "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1t8r8yj</bpmn:incoming>
      <bpmn:outgoing>Flow_12cce9e</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:intermediateCatchEvent id="Event_0u9j303">
      <bpmn:incoming>Flow_1pohp0o</bpmn:incoming>
      <bpmn:outgoing>Flow_1ha2x6g</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_0t2ugtq">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT5S</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:serviceTask id="Activity_0it4jmy" name="Polling reponse sms">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_notif}/conversation/${telCustomer}/message?from=${supplier}&amp;startDate=${startDate}</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="polling information from customer number">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response api get info (polling) : " + respStatusCode);
var execution = connector.getParentVariableScope();

if ( respStatusCode == 200) {
var obj = JSON.parse(resp);
if(obj.body != null){
execution.setVariable("isAnswer2", true);
}else{
execution.setVariable("isAnswer2", false);
}
}else{
print('Error to get information '+resp);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1ha2x6g</bpmn:incoming>
      <bpmn:outgoing>Flow_1q26ubn</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_048t4zp">
      <bpmn:incoming>Flow_1q26ubn</bpmn:incoming>
      <bpmn:outgoing>Flow_1wmojbv</bpmn:outgoing>
      <bpmn:outgoing>Flow_1t8r8yj</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_06idoqu" sourceRef="Gateway_0xl21pe" targetRef="newXp.intrusion.main.SignalToConfirmedAlarmStateActive" />
    <bpmn:sequenceFlow id="Flow_1o109jy" sourceRef="Gateway_0xl21pe" targetRef="Gateway_1av8n57" />
    <bpmn:sequenceFlow id="Flow_1g64wn4" name="Bad answer" sourceRef="Gateway_1av8n57" targetRef="Event_04qcc5u">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${badAnswerFlow}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1p8x1di" name="Not respond SMS" sourceRef="Gateway_1av8n57" targetRef="Activity_0c4tzi4">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!badAnswerFlow}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0wbj18i" sourceRef="Gateway_0xl21pe" targetRef="newXp.intrusion.main.SignalToSendSms40.activeAlarm" />
    <bpmn:sequenceFlow id="Flow_1b63gvc" sourceRef="Event_04qcc5u" targetRef="Event_1cmx0er" />
    <bpmn:sequenceFlow id="Flow_1wmojbv" sourceRef="Gateway_048t4zp" targetRef="Activity_0c4tzi4">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!isAnswer2}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0p3u9a0" sourceRef="Activity_0c4tzi4" targetRef="Gateway_0gd3bsl" />
    <bpmn:sequenceFlow id="Flow_19829pg" sourceRef="Gateway_0gd3bsl" targetRef="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswer">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!toPoll2}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1pohp0o" sourceRef="Gateway_0gd3bsl" targetRef="Event_0u9j303">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${toPoll2}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_11attnb" sourceRef="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswer" targetRef="Event_0qdvdug" />
    <bpmn:sequenceFlow id="Flow_12cce9e" sourceRef="newXp.intrusion.main.sendToEvent.technicalEvent.delayAnswer" targetRef="Event_0qdvdug" />
    <bpmn:sequenceFlow id="Flow_1t8r8yj" sourceRef="Gateway_048t4zp" targetRef="newXp.intrusion.main.sendToEvent.technicalEvent.delayAnswer">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${isAnswer2}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1ha2x6g" sourceRef="Event_0u9j303" targetRef="Activity_0it4jmy" />
    <bpmn:sequenceFlow id="Flow_1q26ubn" sourceRef="Activity_0it4jmy" targetRef="Gateway_048t4zp" />
    <bpmn:endEvent id="newXp.main.SignalToSendSms30" name="Send sms 30">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="set body sms 30">
            <camunda:script scriptFormat="Javascript">execution.setVariable("bodyMessage", execution.getVariable('bodyMessageConversation30'));</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0rkclqg</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1jfpxky" signalRef="Signal_3j095fc">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:parallelGateway id="Gateway_1dwgtuk">
      <bpmn:incoming>Flow_0ebb1ox</bpmn:incoming>
      <bpmn:outgoing>Flow_0rkclqg</bpmn:outgoing>
      <bpmn:outgoing>Flow_1etigpz</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:endEvent id="Event_10gl2dz" name="End">
      <bpmn:incoming>Flow_1etigpz</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0gk7yqu" signalRef="Signal_2iu5rha">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0rkclqg" sourceRef="Gateway_1dwgtuk" targetRef="newXp.main.SignalToSendSms30" />
    <bpmn:sequenceFlow id="Flow_1etigpz" sourceRef="Gateway_1dwgtuk" targetRef="Event_10gl2dz" />
    <bpmn:serviceTask id="Activity_06r300u" name="Update lastSupport and lastWhoSupport">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">var details = JSON.parse(execution.getVariable("detailsAlarm"));
var alarmId= execution.getVariable("alarmId");
var detailsAdd = JSON.parse('{"lastSupport" : "'+Date.now()+'", "lastWhoSupport": "CTS"}');

var mergedDetails = {...details, ...detailsAdd};

'{"id": "'+alarmId+'", "details": '+JSON.stringify(mergedDetails)+'}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response create or update alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api update attributs: "+respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>newXp.intrusion.main.stateActive</bpmn:incoming>
      <bpmn:outgoing>Flow_0a58a0f</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0z81cph" sourceRef="Activity_0sj24lp" targetRef="Activity_0hn8ng5" />
    <bpmn:endEvent id="Event_0tl8atw" name="End">
      <bpmn:incoming>Flow_0lm6rrs</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1h6mkg5" signalRef="Signal_2iu5rha">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:endEvent id="newXp.intrusion.main.SignalToSendSms20" name="Send SMS 20">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="set body sms">
            <camunda:script scriptFormat="Javascript">execution.setVariable("bodyMessage", execution.getVariable('bodyMessageConversation20'));</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1v1ky47</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0llphc3" signalRef="Signal_3j095fc">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:parallelGateway id="Gateway_09b9mpu">
      <bpmn:incoming>Flow_03iew5h</bpmn:incoming>
      <bpmn:outgoing>Flow_1v1ky47</bpmn:outgoing>
      <bpmn:outgoing>Flow_0lm6rrs</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:sequenceFlow id="Flow_0lm6rrs" sourceRef="Gateway_09b9mpu" targetRef="Event_0tl8atw" />
    <bpmn:sequenceFlow id="Flow_1v1ky47" sourceRef="Gateway_09b9mpu" targetRef="newXp.intrusion.main.SignalToSendSms20" />
    <bpmn:serviceTask id="newXp.intrusion.main.sendToEvent.technicalEvent.handleByCustomer" name="Send technical Event : handle by customer">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.technicalEvent.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"type": "Client traite l\'alerte intrusion '+execution.getVariable('contact')+' '+execution.getVariable('mobilePhoneNumber')+'",  "contractId": "'+contractId+'",  "gatewayId": null,  "deviceId": null,  "source": null,  "location": null,  "datetimeGateway": "'+new Date().toISOString()+'",  "cid": "sms"}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')

print("Response status api send message kafka to event 'handle by customer': "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_16lmlsc</bpmn:incoming>
      <bpmn:outgoing>Flow_03iew5h</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_0hn8ng5" name="Update lastSupport and lastWhoSupport">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">var details = JSON.parse(execution.getVariable("detailsAlarm"));
var alarmId= execution.getVariable("alarmId");
var detailsAdd = JSON.parse('{"lastSupport" : "'+Date.now()+'", "lastWhoSupport": "Customer"}');

var mergedDetails = {...details, ...detailsAdd};

'{"id": "'+alarmId+'", "details": '+JSON.stringify(mergedDetails)+'}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response create or update alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api update alarm intrusion: "+respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0z81cph</bpmn:incoming>
      <bpmn:outgoing>Flow_16lmlsc</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_0sj24lp" name="Tracability EXPECTEDMONITORINGSTATION to false">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDMONITORINGSTATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedMonitoringStation":false}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à True: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>newXp.main.answerIsYes</bpmn:incoming>
      <bpmn:outgoing>Flow_0z81cph</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="newXp.intrusion.main.event.getLastEventMHS" name="Get Last event MHS">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_event}/v1/events?contractId=${contractId}&amp;limit=1&amp;type=D%C3%A9sactivation&amp;eDateTime=${dateServerEnd}&amp;sDateTime=${dateServerStart}</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="Get last event Désactivation &#60; 5 minutes">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')

print("Get last event  :" + respStatusCode);
print("Get last event  :" + resp);

var execution = connector.getParentVariableScope();
var SMS30 = execution.getVariable("bodyMessageConversation30");

if(respStatusCode == 200){
var obj = JSON.parse(resp);
var obj2 = JSON.parse(SMS30);
if(obj[0] !== undefined){
obj2.option.user = obj[0].user;
execution.setVariable("bodyMessageConversation30", JSON.stringify(obj2));
}
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0xedf4f</bpmn:incoming>
      <bpmn:outgoing>Flow_13px4ab</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_06gfzpr" name="Tracability EXPECTEDMONITORINGSTATION to false">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDMONITORINGSTATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedMonitoringStation":false}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à True: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_13px4ab</bpmn:incoming>
      <bpmn:outgoing>Flow_0ebb1ox</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0ebb1ox" sourceRef="Activity_06gfzpr" targetRef="Gateway_1dwgtuk" />
    <bpmn:serviceTask id="newXp.intrusion.main.tb-facade.getActiveAlarm" name="get Alarm active">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/alarm/${entityId}?searchStatus=ACTIVE&amp;sortProperty=createdTime&amp;sortOrder=desc&amp;textSearch=simpleIntrusion%20Alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="response_get_alarme_active">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print('alarme active '+respStatusCode +' '+resp)

/* get activity id from parent*/
var execution = connector.getParentVariableScope();
var activityId = execution.getCurrentActivityId();
/*end get activity id from parent*/

if (respStatusCode == 200) {

/*solve incident if exist*/
if (execution.getVariable('incidentId')!=null)
{
execution.getProcessEngineServices().getRuntimeService().createIncidentQuery().incidentId(execution.getVariable('incidentId')).singleResult().resolve();
execution.setVariable('incidentId',null);
}
/* end solving incident*/

var obj = JSON.parse(response);
	if(obj.length == 0){
execution.setVariable("nbElements",  obj.length);		execution.setVariable('alarmActive', false);
execution.setVariable("alarmList",  JSON.stringify(obj));
	}else{
execution.setVariable("alarmList",  JSON.stringify(obj));
execution.setVariable("nbElements",  obj.totalElements);
	}
}else{
/* create incident*/

var IncidentEntity  = Java.type('org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity');
	var IncidentContext = Java.type('org.camunda.bpm.engine.impl.incident.IncidentContext');
	var context = new IncidentContext();
  var parentScope = connector.getParentVariableScope()
	context.setActivityId(parentScope.getCurrentActivityId());
	context.setExecutionId(parentScope.getProcessInstanceId());
	context.setProcessDefinitionId(parentScope.getProcessDefinitionId());
	var newIncident  = IncidentEntity.createAndInsertIncident("Error to send Mail with Notification", context, response);
newIncident.id
execution.setVariable('incidentId',newIncident.getId());
execution.setVariable('taskOnError', activityId);
/*end create incident*/
 throw new org.camunda.bpm.engine.delegate.BpmnError('CheckError',activityId);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1s6r17b</bpmn:incoming>
      <bpmn:outgoing>Flow_0o5h0bk</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1a18ypv" sourceRef="Gateway_0odyiew" targetRef="Activity_0saaqf1" />
    <bpmn:serviceTask id="newXp.intrusion.main.updateAlarm" name="Update Simple alarme intrusion">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"id":"'+execution.getVariable("alarmId")+'", "endTs": "'+Date.now()+'", "details": '+ execution.getVariable("detailsAlarm")+'}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response create or update alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response status api update alarm intrusion: "+respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>newXp.intrusion.main.alarmGreater3Min</bpmn:incoming>
      <bpmn:outgoing>Flow_0rchavp</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="newXp.intrusion.main.createAlarm" name="Create Simple alarme intrusion">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb}api/alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="X-Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"tenantId": {  "entityType": "TENANT",  "id": "'+execution.getVariable("tenantId")+'"},"type": "simpleIntrusion Alarm","originator": {  "entityType": "ASSET",  "id": "'+execution.getVariable("entityId")+'"},"severity": "MAJOR","status": "ACTIVE_UNACK","details": '+ execution.getVariable("detailsAlarm")+',"propagate": true,"createdTime": '+ Date.now()+',"name": "simpleIntrusion Alarm"}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response create alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response status api create alarm intrusion: "+respStatusCode);
print("Response status api create alarm intrusion: "+resp);
var execution = connector.getParentVariableScope();

if (respStatusCode == 200) {
var obj = JSON.parse(resp);
	if(obj.totalElements == 0){
	execution.setVariable('alarmActive', false);
	}else{
	execution.setVariable('alarmState','true');
execution.setVariable('alarmId', obj.id.id);
}
} else if (respStatusCode == 404){
	print("traitement erreur 404");
	execution.setVariable('alarmState','other');
}else{
print('Message error : '+resp);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>newXp.intrusion.main.noAlarmActive</bpmn:incoming>
      <bpmn:outgoing>Flow_19s5kbh</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="Gateway_0r5rlr9" name="En délégation ?">
      <bpmn:incoming>Flow_0rchavp</bpmn:incoming>
      <bpmn:incoming>Flow_19s5kbh</bpmn:incoming>
      <bpmn:outgoing>Flow_1gvdey2</bpmn:outgoing>
      <bpmn:outgoing>Flow_1c5v0yx</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="Activity_0saaqf1" name="Tracability EXPECTEDNOTIFICATION to true" camunda:asyncBefore="true">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDNOTIFICATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedNotification":true}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à True: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1a18ypv</bpmn:incoming>
      <bpmn:outgoing>Flow_0bmrak6</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:parallelGateway id="Gateway_0odyiew">
      <bpmn:incoming>Flow_1c5v0yx</bpmn:incoming>
      <bpmn:outgoing>Flow_1a18ypv</bpmn:outgoing>
      <bpmn:outgoing>Flow_0ba6bmf</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:exclusiveGateway id="Gateway_05uabig" name="Answer value ?">
      <bpmn:incoming>newXp.intrusion.main.goodAnswer</bpmn:incoming>
      <bpmn:outgoing>newXp.main.answerIsYes</bpmn:outgoing>
      <bpmn:outgoing>newXp.main.answerIsNo</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:task id="newXp.intrusion.main.checkAnswer" name="Check anwser Customer">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="response customer">
            <camunda:script scriptFormat="Javascript">var body = execution.getVariable("body");
print("client a répondu reponse" + body );
var yesRegex = /\b(?:[Oo0][uU]?[iI]?|O|ou)\b/;
var noRegex = /\b[Nn][oOôÔ]?[nN]?\b/;
var answerCustomer = false;
var answerValue;
if(yesRegex.test(body)){
answerCustomer = true;
answerValue= "oui";
}else if(noRegex.test(body)){
answerCustomer = true;
answerValue= "non";
}

var startTimer = execution.getVariable("startTimer");
var startTimerAnswered = Date.now();
var diffStartTimer = (startTimerAnswered - startTimer)/1000;
var durationNoAnswer = execution.getVariable("durationNoAnswer").split('PT')[1].split('S')[0];
var diffTimerBadAnswer = 'PT'+Math.floor(durationNoAnswer - diffStartTimer)+'S';

execution.setVariable("answerCustomer", answerCustomer);
execution.setVariable("answerValue", answerValue);
execution.setVariable("diffTimerBadAnswer", diffTimerBadAnswer);
</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_10820mx</bpmn:incoming>
      <bpmn:outgoing>Flow_16gzdhz</bpmn:outgoing>
    </bpmn:task>
    <bpmn:sequenceFlow id="Flow_1c5v0yx" name="False" sourceRef="Gateway_0r5rlr9" targetRef="Gateway_0odyiew">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!delegation}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="Activity_0vr13nz" name="Trigger crow sirens">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_device}/v1/devices/${crowGatewayId}/commands</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"type":"siren","values":true}';</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response trigger crow siren">
              <camunda:script scriptFormat="JavaScript">var execution = connector.getParentVariableScope();
var crowGatewayId = execution.getVariable('crowGatewayId');
var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status API trigger Crow sirens on gateway ("+ crowGatewayId +") : " + respStatusCode + " " + resp );</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_10f6996</bpmn:incoming>
    </bpmn:serviceTask>
    <bpmn:endEvent id="Event_1ty4g4i" name="End">
      <bpmn:incoming>Flow_1ucveis</bpmn:incoming>
      <bpmn:incoming>Flow_03ir0dl</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:exclusiveGateway id="Gateway_1wf7lft" name="Central V3 ?">
      <bpmn:incoming>Flow_108rvc2</bpmn:incoming>
      <bpmn:outgoing>Flow_1ucveis</bpmn:outgoing>
      <bpmn:outgoing>Flow_10f6996</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1ucveis" name="false" sourceRef="Gateway_1wf7lft" targetRef="Event_1ty4g4i">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!isGatewayV3}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_10f6996" name="true" sourceRef="Gateway_1wf7lft" targetRef="Activity_0vr13nz">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${isGatewayV3}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="Activity_1907sj5" name="Get associated gateway">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/asset/${contractId}/devices</camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="response tb central">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
var execution = connector.getParentVariableScope();
var v3Centrals = ["ORG-CONTROL PANEL 4G V3", "GRP-CONTROL PANEL 4G V3"];
var isGatewayV3 = false;
print("Devices associated to contract : " + resp );

execution.setVariable('isGatewayV3', false);

if([200, 201, 202, 204].includes(respStatusCode)){
    var devices = JSON.parse(resp);
    if(devices != null &amp;&amp; devices.length &gt;= 0){
        for(var i = 0; i &lt; devices.length; i++){
            if(devices[i].type.includes("gateway")){
                print("Found gateway for contract : " + devices[i].name);
                isGatewayV3 = v3Centrals.includes(devices[i].attributeData['model']);
                execution.setVariable("isGatewayV3", isGatewayV3);
                execution.setVariable("crowGatewayId", devices[i].name);
                break;
            }
        }
    }
}

if(isGatewayV3) {
   print('Gateway is of type V3. Initiating trigger of crow sirens');
} else {
   print('Gateway is not V3. Abort trigger of crow sirens');
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_104qsmb</bpmn:incoming>
      <bpmn:outgoing>Flow_108rvc2</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_108rvc2" sourceRef="Activity_1907sj5" targetRef="Gateway_1wf7lft" />
    <bpmn:exclusiveGateway id="Gateway_0lzfgom" name="Meari intérieure ?">
      <bpmn:extensionElements />
      <bpmn:incoming>Flow_1tavky7</bpmn:incoming>
      <bpmn:outgoing>Flow_03ir0dl</bpmn:outgoing>
      <bpmn:outgoing>Flow_104qsmb</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_03ir0dl" name="false" sourceRef="Gateway_0lzfgom" targetRef="Event_1ty4g4i">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!isMeariInt}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_104qsmb" name="true" sourceRef="Gateway_0lzfgom" targetRef="Activity_1907sj5">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${isMeariInt}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0ba6bmf" sourceRef="Gateway_0odyiew" targetRef="Activity_117nfa1" />
    <bpmn:scriptTask id="Activity_117nfa1" name="Prepare variables for Crow sirens" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_0ba6bmf</bpmn:incoming>
      <bpmn:outgoing>Flow_1tavky7</bpmn:outgoing>
      <bpmn:script>print('Will trigger all crow sirens if camera is meari interior');
var deviceType = execution.getVariable('deviceType');
var constructor= execution.getVariable('constructor');

print('Device type : ' + deviceType);
print('Constructor : ' + constructor);

var isMeariInt = deviceType === 'camera' &amp;&amp; constructor === 'Meari';
execution.setVariable("isMeariInt", isMeariInt ); 

if(isMeariInt){
   print('Preparing for the trigger of crow sirens');
} else {
   print('Abort of the trigger of crow sirens');
}</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_1tavky7" sourceRef="Activity_117nfa1" targetRef="Gateway_0lzfgom" />
  </bpmn:process>
  <bpmn:signal id="Signal_0o1h7gj" name="newXp.intrusion.getInfoCRM" />
  <bpmn:signal id="Signal_2ctlijd" name="newXp.intrusion.mainAfterGetCrm" />
  <bpmn:signal id="Signal_11pb7c6" name="alarms and devices" />
  <bpmn:signal id="Signal_0frglj1" name="main_after_alamr_devices" />
  <bpmn:process id="tus.prc.newXp.intrusion.end" name="tus.prc.newXp.intrusion.end" isExecutable="true" camunda:versionTag="newXp.intrusion_0.12.1" camunda:historyTimeToLive="1">
    <bpmn:startEvent id="Event_017w6ci">
      <bpmn:outgoing>Flow_0gcpoxi</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1gkst5t" signalRef="Signal_2iu5rha" />
    </bpmn:startEvent>
    <bpmn:endEvent id="Event_0r7w8dd" name="EndProcess">
      <bpmn:incoming>Flow_02e1y9v</bpmn:incoming>
      <bpmn:signalEventDefinition id="SignalEventDefinition_00xquvq" signalRef="Signal_1b28jph">
        <bpmn:extensionElements>
          <camunda:in variables="all" />
          <camunda:in businessKey="#{execution.processBusinessKey}" />
        </bpmn:extensionElements>
      </bpmn:signalEventDefinition>
    </bpmn:endEvent>
    <bpmn:serviceTask id="end.intrusion.thingsboard.ackAlarm" name="Ack alarm">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb}api/alarm/${alarmId}/ack</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="X-Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:outputParameter name="response ack alarm">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')

print("Response status api ack alarm: "+respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0gcpoxi</bpmn:incoming>
      <bpmn:outgoing>Flow_02e1y9v</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0gcpoxi" sourceRef="Event_017w6ci" targetRef="end.intrusion.thingsboard.ackAlarm" />
    <bpmn:sequenceFlow id="Flow_02e1y9v" sourceRef="end.intrusion.thingsboard.ackAlarm" targetRef="Event_0r7w8dd" />
  </bpmn:process>
  <bpmn:signal id="Signal_2iu5rha" name="intrusion.endingProcess" />
  <bpmn:process id="tus.prc.newXp.intrusion.sendSms" name="tus.prc.newXp.intrusion.sendSms" isExecutable="true" camunda:versionTag="newXp.intrusion_0.12.1" camunda:historyTimeToLive="1">
    <bpmn:startEvent id="Event_1eysr4u">
      <bpmn:outgoing>Flow_134w6bc</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_0jdd064" signalRef="Signal_3j095fc" />
    </bpmn:startEvent>
    <bpmn:sendTask id="sendSms.notification.sendSms" name="Send message">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_notif}/conversation/${conversationId}/message</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Content-Type">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">${bodyMessage}</camunda:inputParameter>
            <camunda:outputParameter name="response send message">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response');
var respStatusCode = connector.getVariable('statusCode');
print("Response api send message : " + respStatusCode);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_134w6bc</bpmn:incoming>
    </bpmn:sendTask>
    <bpmn:sequenceFlow id="Flow_134w6bc" sourceRef="Event_1eysr4u" targetRef="sendSms.notification.sendSms" />
  </bpmn:process>
  <bpmn:signal id="Signal_3j095fc" name="intrusion.sendSms" />
  <bpmn:process id="tus.prc.newXp.intrusion.confirmedAlarm" name="tus.prc.newXp.intrusion.confirmedAlarm" isExecutable="true" camunda:versionTag="newXp.intrusion_0.12.1" camunda:historyTimeToLive="1">
    <bpmn:scriptTask id="confirmedAlarm.intrusion.setVariables" name="Prepare payload" scriptFormat="Javascript">
      <bpmn:incoming>Flow_066d06l</bpmn:incoming>
      <bpmn:outgoing>Flow_0ee2p56</bpmn:outgoing>
      <bpmn:script>
function uuidv4() { 
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'
    .replace(/[xy]/g, function (c) { 
        const r = Math.random() * 16 | 0,  
            v = c == 'x' ? r : (r &amp; 0x3 | 0x8); 
        return v.toString(16); 
    }); 
}

var cid = "INTRCO";
if("ATT" == execution.getVariable('statusContract')){
cid = "INTRCI";
}

var details = JSON.parse(execution.getVariable("detailsAlarm"));
var detailsAdd = JSON.parse('{"cid":"'+cid+'","lastSupport" : "'+Date.now()+'", "lastWhoSupport": "CTS"}');

var mergedDetails = {...details, ...detailsAdd};

var bodyAlarm = '{"id": "'+execution.getVariable("alarmId")+'", "details":  '+JSON.stringify(mergedDetails)+'}';

execution.setVariable("uuid", uuidv4());
execution.setVariable("bodyAlarm", bodyAlarm);
execution.setVariable("cid", cid);</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:startEvent id="Event_1jj3bma">
      <bpmn:outgoing>Flow_066d06l</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_02su95b" signalRef="Signal_0jko34k" />
    </bpmn:startEvent>
    <bpmn:serviceTask id="Activity_07wbqp0" name="Update attributs">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_tb_facade}/api/alarm</camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
                <camunda:entry key="Authorization">${newTokenKC}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">${bodyAlarm}</camunda:inputParameter>
            <camunda:outputParameter name="updat attributs">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api update attributs send to TSL/Event: "+respStatusCode );</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0ee2p56</bpmn:incoming>
      <bpmn:outgoing>Flow_17f2fpv</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:parallelGateway id="Gateway_185ug67">
      <bpmn:incoming>Flow_17f2fpv</bpmn:incoming>
      <bpmn:outgoing>Flow_1s13fxv</bpmn:outgoing>
      <bpmn:outgoing>Flow_1c7ui91</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:serviceTask id="confirmedAlarm.intrusion.kafkaUtil.sendToEvent" name="Send message Kafka to Event">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.event.event.send&amp;header=true</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"event": {  "eventId": "'+ execution.getVariable("eventId") +'-CTS",  "cid": "' + execution.getVariable("cid") + '",  "dateTimeGateway": "' + new Date().toISOString().split('.')[0]+'Z' + '",  "dateTimeTB": "' + new Date().toISOString().split('.')[0]+'Z' + '",  "gatewayId": "'+execution.getVariable("gatewayId")+'",  "label": "'+execution.getVariable("label")+'",  "location": "'+execution.getVariable("location")+'",  "source": "'+execution.getVariable("source")+'",  "type": "Demande de prise en charge transmise au CTS",  "user": "'+execution.getVariable("user")+'",  "deviceId": "'+execution.getVariable("deviceId")+'",  "contractId": "'+execution.getVariable("contractId")+'"},"metadata": {  "callerId": "teamUsages.alarmManagement",  "messageType": "POST",  "messageId": "' + execution.getVariable("uuid") + '"}}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to event">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka to event: "+respStatusCode + " " +resp);
</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1s13fxv</bpmn:incoming>
      <bpmn:outgoing>Flow_13w6n0a</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:parallelGateway id="Gateway_17wf855">
      <bpmn:incoming>Flow_1x0qrw2</bpmn:incoming>
      <bpmn:incoming>Flow_13w6n0a</bpmn:incoming>
    </bpmn:parallelGateway>
    <bpmn:serviceTask id="confirmedAlarm.intrusion.kafkaUtil.sendToTls" name="Send message Kafka to TLS">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.telesurveillance.event.send&amp;header=true</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "teamUsages.alarmManagement.NewXp","messageType": "POST","messageId": "' + execution.getVariable("uuid") + '"}, "gateway":{  "gatewayId":"'+execution.getVariable("gatewayId")+'",  "constructor":"Crow",  "virtualGateway":"'+execution.getVariable("virtualGateway")+'",  "event":{     "cid":"' + execution.getVariable("cid") + '",     "dateTimeGateway":"' + execution.getVariable("dateTimeGatewayIso") + '",     "label": "'+execution.getVariable("label")+'", "location": "'+execution.getVariable("location")+'","user": "'+execution.getVariable("user")+'", "source": "'+execution.getVariable("source")+'", "uuid": "'+execution.getVariable("eventId")+'"  } }}'</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka to TLS">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka to TLS: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_181uq1x</bpmn:incoming>
      <bpmn:outgoing>Flow_1x0qrw2</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_1i0h7ga" name="Tracability EXPECTEDMONITORINGSTATION to true">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">${url_kafka_util}/api/sendMessage?topic=teamusages.tracability.send&amp;header=false</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="accept">application/json</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="Javascript">'{"metadata": {"callerId": "tus.prc.newXp.intrusion.main","messageType": "EXPECTEDMONITORINGSTATION","messageId": "'+execution.getVariable("uuidTracability")+'"}, "uuid":"'+execution.getVariable("eventId")+'" ,"expectedMonitoringStation":true}'
</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="response send message kafka for tracabiltiy">
              <camunda:script scriptFormat="JavaScript">var resp = connector.getVariable('response')
var respStatusCode = connector.getVariable('statusCode')
print("Response status api send message kafka for tracability EXPECTEDNOTIF à True: "+respStatusCode + " " +resp);</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1c7ui91</bpmn:incoming>
      <bpmn:outgoing>Flow_181uq1x</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_066d06l" sourceRef="Event_1jj3bma" targetRef="confirmedAlarm.intrusion.setVariables" />
    <bpmn:sequenceFlow id="Flow_0ee2p56" sourceRef="confirmedAlarm.intrusion.setVariables" targetRef="Activity_07wbqp0" />
    <bpmn:sequenceFlow id="Flow_17f2fpv" sourceRef="Activity_07wbqp0" targetRef="Gateway_185ug67" />
    <bpmn:sequenceFlow id="Flow_1c7ui91" sourceRef="Gateway_185ug67" targetRef="Activity_1i0h7ga" />
    <bpmn:sequenceFlow id="Flow_1s13fxv" sourceRef="Gateway_185ug67" targetRef="confirmedAlarm.intrusion.kafkaUtil.sendToEvent" />
    <bpmn:sequenceFlow id="Flow_13w6n0a" sourceRef="confirmedAlarm.intrusion.kafkaUtil.sendToEvent" targetRef="Gateway_17wf855" />
    <bpmn:sequenceFlow id="Flow_1x0qrw2" sourceRef="confirmedAlarm.intrusion.kafkaUtil.sendToTls" targetRef="Gateway_17wf855" />
    <bpmn:sequenceFlow id="Flow_181uq1x" sourceRef="Activity_1i0h7ga" targetRef="confirmedAlarm.intrusion.kafkaUtil.sendToTls" />
  </bpmn:process>
  <bpmn:signal id="Signal_0jko34k" name="intrusion.sendAlarmConfirmed" />
  <bpmn:error id="Error_0tidgvc" name="newXp.infosCrm.exception" />
  <bpmn:signal id="Signal_38r5rd9" name="main_delay_answer_check" />
  <bpmn:process id="tus.prc.newXp.intrusion.logoutKC" name="tus.prc.newXp.intrusion.logoutKC" isExecutable="true" camunda:versionTag="newXp.intrusion_0.12.1" camunda:historyTimeToLive="1">
    <bpmn:startEvent id="logoutKC.intrusion.receiveSignal" name="Logout KC">
      <bpmn:outgoing>Flow_1c3s6nv</bpmn:outgoing>
      <bpmn:signalEventDefinition id="SignalEventDefinition_1b5q89c" signalRef="Signal_1b28jph" />
    </bpmn:startEvent>
    <bpmn:parallelGateway id="Gateway_0h7n48v">
      <bpmn:incoming>Flow_1c3s6nv</bpmn:incoming>
      <bpmn:outgoing>Flow_0xm6ttw</bpmn:outgoing>
      <bpmn:outgoing>Flow_1usg6nl</bpmn:outgoing>
    </bpmn:parallelGateway>
    <bpmn:callActivity id="logoutKC.ibtrusion.camunda.authKC" name="Logout KC" calledElement="${kcSubprocessId}">
      <bpmn:extensionElements>
        <camunda:in businessKey="#{execution.processBusinessKey}" />
        <camunda:in variables="all" />
        <camunda:out variables="all" />
        <camunda:inputOutput>
          <camunda:inputParameter name="action">logout</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_16he9g2</bpmn:incoming>
      <bpmn:incoming>Flow_0xm6ttw</bpmn:incoming>
      <bpmn:outgoing>Flow_02queo9</bpmn:outgoing>
    </bpmn:callActivity>
    <bpmn:endEvent id="logoutKC.intrusion.endProcess" name="End process">
      <bpmn:incoming>Flow_02queo9</bpmn:incoming>
      <bpmn:terminateEventDefinition id="TerminateEventDefinition_0smjk1b" />
    </bpmn:endEvent>
    <bpmn:intermediateCatchEvent id="logoutKC.intrusion.logoutAfterXminutes" name="Logout session After X minutes">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="Input_22avu4a">
            <camunda:script scriptFormat="Javascript" />
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1usg6nl</bpmn:incoming>
      <bpmn:outgoing>Flow_16he9g2</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_03zgyf2">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT5M</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:sequenceFlow id="Flow_1c3s6nv" sourceRef="logoutKC.intrusion.receiveSignal" targetRef="Gateway_0h7n48v" />
    <bpmn:sequenceFlow id="Flow_0xm6ttw" sourceRef="Gateway_0h7n48v" targetRef="logoutKC.ibtrusion.camunda.authKC" />
    <bpmn:sequenceFlow id="Flow_1usg6nl" sourceRef="Gateway_0h7n48v" targetRef="logoutKC.intrusion.logoutAfterXminutes" />
    <bpmn:sequenceFlow id="Flow_16he9g2" sourceRef="logoutKC.intrusion.logoutAfterXminutes" targetRef="logoutKC.ibtrusion.camunda.authKC" />
    <bpmn:sequenceFlow id="Flow_02queo9" sourceRef="logoutKC.ibtrusion.camunda.authKC" targetRef="logoutKC.intrusion.endProcess" />
  </bpmn:process>
  <bpmn:signal id="Signal_1b28jph" name="intrusion.logout" />
  <bpmn:error id="Error_0piz4xg" name="newXp.smoke.main.exception" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_1a8sclz">
      <bpmndi:BPMNShape id="Participant_0jp0eg7_di" bpmnElement="intrusion.infosCrm" isHorizontal="true" bioc:stroke="#6b3c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#6b3c00">
        <dc:Bounds x="170" y="1100" width="1100" height="540" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_03cnh5z" bpmnElement="Event_1x2r53q">
        <dc:Bounds x="398" y="1182" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1pagx9p" bpmnElement="newXp.smoke.handleExceptions" isExpanded="true">
        <dc:Bounds x="395" y="1260" width="580" height="320" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_18392us" bpmnElement="newXp.intrusion.infosCrm.exception.startExceptions" bioc:stroke="#831311" bioc:fill="#ffcdd2" color:background-color="#ffcdd2" color:border-color="#831311">
        <dc:Bounds x="427" y="1373" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="405" y="1416" width="80" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0r633wj" bpmnElement="newXp.intrusion.infosCrm.exception.setRetries">
        <dc:Bounds x="495" y="1351" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0qga9ep" bpmnElement="Gateway_148moit" isMarkerVisible="true">
        <dc:Bounds x="620" y="1366" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0piqaoj" bpmnElement="newXp.intrusion.infosCrm.exception.sendMail">
        <dc:Bounds x="605" y="1470" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0n9pupb" bpmnElement="newXp.intrusion.infosCrm.exception.pause">
        <dc:Bounds x="717" y="1373" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="720" y="1416" width="30" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1mpose0" bpmnElement="newXp.intrusion.infosCrm.exception.returnLastTask">
        <dc:Bounds x="785" y="1351" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0t2g6xw" bpmnElement="Event_0b13god">
        <dc:Bounds x="907" y="1373" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1hhq227_di" bpmnElement="Event_1rbrndo">
        <dc:Bounds x="907" y="1492" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="908" y="1535" width="35" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_1uwns2h" bpmnElement="Flow_1pbvdbk">
        <di:waypoint x="463" y="1391" />
        <di:waypoint x="495" y="1391" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_09hh19t" bpmnElement="Flow_1c4nhgz">
        <di:waypoint x="595" y="1391" />
        <di:waypoint x="620" y="1391" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_118gkhf" bpmnElement="newXp.intrusion.infosCrm.exception.retryLower4">
        <di:waypoint x="670" y="1391" />
        <di:waypoint x="717" y="1391" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="677" y="1346" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0wk4sv6" bpmnElement="newXp.intrusion.infosCrm.exception.retryGreater3">
        <di:waypoint x="645" y="1416" />
        <di:waypoint x="645" y="1470" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="674" y="1436" width="42" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1189as0" bpmnElement="Flow_0y0hmyi">
        <di:waypoint x="705" y="1510" />
        <di:waypoint x="907" y="1510" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_00e1070" bpmnElement="Flow_13t8623">
        <di:waypoint x="753" y="1391" />
        <di:waypoint x="785" y="1391" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0jy311w" bpmnElement="Flow_1o8ot1l">
        <di:waypoint x="885" y="1391" />
        <di:waypoint x="907" y="1391" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_12vjwk1_di" bpmnElement="newXp.intrusion.infosCrm.signalToReturnMainProcess">
        <dc:Bounds x="872" y="1182" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="860" y="1225" width="60" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0ztxp05" bpmnElement="newXp.intrusion.infosCrm.getEmergencyContact">
        <dc:Bounds x="730" y="1160" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_163e2pr" bpmnElement="newXp.intrusion.infosCrm.getContract">
        <dc:Bounds x="590" y="1160" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1h945gt" bpmnElement="Activity_1e1s5ct">
        <dc:Bounds x="470" y="1160" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_09rg2oy_di" bpmnElement="Flow_09rg2oy">
        <di:waypoint x="434" y="1200" />
        <di:waypoint x="470" y="1200" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_17js5vu_di" bpmnElement="Flow_17js5vu">
        <di:waypoint x="830" y="1200" />
        <di:waypoint x="872" y="1200" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1jliagl_di" bpmnElement="Flow_1jliagl">
        <di:waypoint x="570" y="1200" />
        <di:waypoint x="590" y="1200" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1l7lst4_di" bpmnElement="Flow_1l7lst4">
        <di:waypoint x="690" y="1200" />
        <di:waypoint x="730" y="1200" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_10wkna0_di" bpmnElement="intrusion.main" isHorizontal="true" bioc:stroke="#5b176d" bioc:fill="#e1bee7" color:background-color="#e1bee7" color:border-color="#5b176d">
        <dc:Bounds x="160" y="220" width="2880" height="860" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0n8ru87_di" bpmnElement="newXp.intrusion.main.getStateCrow">
        <dc:Bounds x="1880" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_18jfxe0" bpmnElement="newXp.intrusion.main.sendToEvent.technicalEvent.badAnswer">
        <dc:Bounds x="1880" y="550" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_06qrt90_di" bpmnElement="Gateway_06qrt90" isMarkerVisible="true">
        <dc:Bounds x="2005" y="435" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1994" y="492" width="73" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0szu6od_di" bpmnElement="Gateway_1e6138u">
        <dc:Bounds x="2095" y="905" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1dsxnoh" bpmnElement="newXp.intrusion.main.sendToEvent.technicalEvent.customerIsNotOriginator">
        <dc:Bounds x="1960" y="890" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0lpyfn2_di" bpmnElement="Event_1wl9jpw">
        <dc:Bounds x="1852" y="642" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1845" y="688" width="50" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0ppnpv4" bpmnElement="Activity_1lopwq8">
        <dc:Bounds x="1830" y="890" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1gldwa1_di" bpmnElement="Gateway_1gldwa1" isMarkerVisible="true">
        <dc:Bounds x="1730" y="635" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1w7ag0u" bpmnElement="Activity_0c74ddz">
        <dc:Bounds x="2130" y="240" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0gn8g0x" bpmnElement="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswerGwInactive">
        <dc:Bounds x="1980" y="240" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1hmqiup_di" bpmnElement="Gateway_1hmqiup" isMarkerVisible="true">
        <dc:Bounds x="2005" y="345" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1324hkd" bpmnElement="newXp.intrusion.main.SignalToSendSms40">
        <dc:Bounds x="2162" y="912" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2211" y="923" width="68" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_12t1cje" bpmnElement="Event_1gf280u">
        <dc:Bounds x="2162" y="862" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2204" y="873" width="82" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1fvx37e" bpmnElement="Event_1sp3x8k">
        <dc:Bounds x="2202" y="962" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2245" y="973" width="20" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0cnpngq_di" bpmnElement="Event_1pqusz8">
        <dc:Bounds x="2142" y="962" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1yst21y" bpmnElement="newXp.intrusion.main.createConversationSms10">
        <dc:Bounds x="1330" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0vlxoi7_di" bpmnElement="Gateway_0vlxoi7" isMarkerVisible="true">
        <dc:Bounds x="1765" y="435" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_04e95md" bpmnElement="Event_0co4e2v">
        <dc:Bounds x="1772" y="542" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1jjv44g" bpmnElement="Activity_0ld02a4">
        <dc:Bounds x="1640" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1pl8zsh_di" bpmnElement="Activity_1tl4v1h">
        <dc:Bounds x="1640" y="520" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_153y67e_di" bpmnElement="Gateway_153y67e" isMarkerVisible="true">
        <dc:Bounds x="1565" y="535" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0tmpe65" bpmnElement="confirmedAlarm.intrusion.kafkaUtil.tracability" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1460" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1lp9e99" bpmnElement="Activity_00u3ah0" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1570" y="250" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0zbo6vg" bpmnElement="newXp.intrusion.main.sendSms300">
        <dc:Bounds x="1440" y="250" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1lcsnec" bpmnElement="Activity_1i2lv7h" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1300" y="250" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0r9fa8q" bpmnElement="newXp.smoke.delegation.main.thingsboard.ackAlarm">
        <dc:Bounds x="1730" y="250" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0yxh795" bpmnElement="Event_1lyfz58">
        <dc:Bounds x="1862" y="272" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1849" y="315" width="62" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0zu34rv_di" bpmnElement="newXp.main.signalToGetInfosFromCRM">
        <dc:Bounds x="347" y="292" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="330" y="338" width="70" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0r5u2j4_di" bpmnElement="Event_0r5u2j4">
        <dc:Bounds x="247" y="292" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1w6yqtg_di" bpmnElement="Gateway_1w6yqtg" isMarkerVisible="true">
        <dc:Bounds x="805" y="435" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_02e5ak3_di" bpmnElement="Gateway_02e5ak3" isMarkerVisible="true">
        <dc:Bounds x="805" y="565" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1q7fqx9" bpmnElement="newXp.intrusion.main.filterActiveAlarmIntrusion">
        <dc:Bounds x="570" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_169jmtx" bpmnElement="newXp.intrusion.main.setAllVariables">
        <dc:Bounds x="690" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0pz9sxw" bpmnElement="newXp.intrusion.main.tbFacade.getAsset">
        <dc:Bounds x="300" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_028wmvh" bpmnElement="newXp.main.startProcess">
        <dc:Bounds x="232" y="442" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1qzy9yh_di" bpmnElement="Event_027fkv9">
        <dc:Bounds x="812" y="912" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_19jsqew" bpmnElement="Activity_0o9u4ow" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="780" y="660" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_04m8jqw" bpmnElement="Activity_1936ljl" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="780" y="780" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0y69t38_di" bpmnElement="newXp.intrusion.main.SignalToConfirmedAlarmStateActive">
        <dc:Bounds x="2577" y="442" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2556" y="485" width="82" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_1av8n57_di" bpmnElement="Gateway_1av8n57" isMarkerVisible="true">
        <dc:Bounds x="2405" y="515" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0tc9qrg_di" bpmnElement="Gateway_0xl21pe">
        <dc:Bounds x="2405" y="435" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0gtf4dm" bpmnElement="newXp.intrusion.main.SignalToSendSms40.activeAlarm">
        <dc:Bounds x="2412" y="372" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2466" y="383" width="68" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0m66k57" bpmnElement="Event_1cmx0er">
        <dc:Bounds x="2622" y="522" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2675" y="530" width="20" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1mqne4g" bpmnElement="Event_04qcc5u">
        <dc:Bounds x="2512" y="522" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0hldn4r" bpmnElement="Activity_0c4tzi4">
        <dc:Bounds x="2380" y="610" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0fk41n5" bpmnElement="Gateway_0gd3bsl" isMarkerVisible="true">
        <dc:Bounds x="2555" y="625" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1rrowg7" bpmnElement="newXp.intrusion.main.sendToEvent.technicalEvent.noAnswer">
        <dc:Bounds x="2760" y="610" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ugz1r4" bpmnElement="Event_0qdvdug">
        <dc:Bounds x="2882" y="702" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2840" y="723" width="20" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ifasqk" bpmnElement="newXp.intrusion.main.sendToEvent.technicalEvent.delayAnswer">
        <dc:Bounds x="2760" y="800" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0n4wp1r" bpmnElement="Event_0u9j303">
        <dc:Bounds x="2562" y="712" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_172xbbr" bpmnElement="Activity_0it4jmy">
        <dc:Bounds x="2530" y="800" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0gpkt8s" bpmnElement="Gateway_048t4zp" isMarkerVisible="true">
        <dc:Bounds x="2555" y="905" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1eky0wi_di" bpmnElement="newXp.main.SignalToSendSms30">
        <dc:Bounds x="2742" y="262" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2727" y="238" width="65" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0vsdccb_di" bpmnElement="Gateway_1dwgtuk">
        <dc:Bounds x="2615" y="255" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_09e9m8x_di" bpmnElement="Event_10gl2dz">
        <dc:Bounds x="2622" y="326" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2680" y="333" width="20" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_144s156" bpmnElement="Activity_06r300u">
        <dc:Bounds x="2190" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ub7hsi" bpmnElement="Event_0tl8atw">
        <dc:Bounds x="2242" y="792" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2285" y="803" width="20" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1kq28s3_di" bpmnElement="newXp.intrusion.main.SignalToSendSms20">
        <dc:Bounds x="2242" y="702" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2291" y="713" width="68" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_175wthg_di" bpmnElement="Gateway_09b9mpu">
        <dc:Bounds x="2195" y="745" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1w2m5bw" bpmnElement="newXp.intrusion.main.sendToEvent.technicalEvent.handleByCustomer">
        <dc:Bounds x="2070" y="730" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0g1uw0a" bpmnElement="Activity_0hn8ng5">
        <dc:Bounds x="1940" y="730" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1dkz5i9" bpmnElement="Activity_0sj24lp" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1820" y="730" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0uzjsi7" bpmnElement="newXp.intrusion.main.event.getLastEventMHS">
        <dc:Bounds x="2300" y="240" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0tc7yoj" bpmnElement="Activity_06gfzpr" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="2450" y="240" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0baw778" bpmnElement="newXp.intrusion.main.tb-facade.getActiveAlarm">
        <dc:Bounds x="430" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_12qtx2e" bpmnElement="newXp.intrusion.main.updateAlarm">
        <dc:Bounds x="920" y="550" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_16pgro8" bpmnElement="newXp.intrusion.main.createAlarm">
        <dc:Bounds x="920" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0b1uwnw" bpmnElement="Gateway_0r5rlr9" isMarkerVisible="true">
        <dc:Bounds x="1045" y="435" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1050.5" y="423" width="77" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1th1f1l" bpmnElement="Activity_0saaqf1" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1200" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ee4bnp" bpmnElement="Gateway_0odyiew">
        <dc:Bounds x="1115" y="435" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_05uabig_di" bpmnElement="Gateway_05uabig" isMarkerVisible="true">
        <dc:Bounds x="1730" y="745" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1638" y="763" width="75" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1nftpk2_di" bpmnElement="newXp.intrusion.main.checkAnswer">
        <dc:Bounds x="1540" y="620" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_02vu40y" bpmnElement="Activity_0vr13nz">
        <dc:Bounds x="1090" y="960" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_19g2t45_di" bpmnElement="Event_1ty4g4i">
        <dc:Bounds x="1292" y="862" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1345" y="870" width="20" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0urjwt1" bpmnElement="Gateway_1wf7lft" isMarkerVisible="true">
        <dc:Bounds x="1115" y="855" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1149" y="843" width="62" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_18w3ky4" bpmnElement="Activity_1907sj5">
        <dc:Bounds x="1090" y="740" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1dq9w6o" bpmnElement="Gateway_0lzfgom" isMarkerVisible="true">
        <dc:Bounds x="1115" y="645" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1147" y="633" width="86" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0dw8lsk" bpmnElement="Activity_117nfa1">
        <dc:Bounds x="1090" y="520" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_05tqs8h_di" bpmnElement="Flow_05tqs8h">
        <di:waypoint x="1930" y="550" />
        <di:waypoint x="1930" y="500" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0cwibo7_di" bpmnElement="Flow_0cwibo7">
        <di:waypoint x="1815" y="460" />
        <di:waypoint x="1880" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1f9qvi0_di" bpmnElement="Flow_1f9qvi0">
        <di:waypoint x="1980" y="460" />
        <di:waypoint x="2005" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1par06q_di" bpmnElement="Flow_1par06q">
        <di:waypoint x="1888" y="660" />
        <di:waypoint x="1930" y="660" />
        <di:waypoint x="1930" y="630" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1962abf_di" bpmnElement="newXp.intrusion.main.stateActive">
        <di:waypoint x="2055" y="460" />
        <di:waypoint x="2190" y="460" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2049" y="403" width="69" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01rebr0_di" bpmnElement="newXp.intrusion.main.stateInactive">
        <di:waypoint x="2030" y="435" />
        <di:waypoint x="2030" y="395" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2057" y="433" width="66" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0a58a0f_di" bpmnElement="Flow_0a58a0f">
        <di:waypoint x="2290" y="460" />
        <di:waypoint x="2405" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_001igmn_di" bpmnElement="Flow_001igmn">
        <di:waypoint x="2060" y="930" />
        <di:waypoint x="2095" y="930" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xsh4hi_di" bpmnElement="Flow_1xsh4hi">
        <di:waypoint x="2120" y="905" />
        <di:waypoint x="2120" y="880" />
        <di:waypoint x="2162" y="880" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0k81s65_di" bpmnElement="Flow_0k81s65">
        <di:waypoint x="2120" y="955" />
        <di:waypoint x="2120" y="980" />
        <di:waypoint x="2142" y="980" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0i8d2tw_di" bpmnElement="Flow_0i8d2tw">
        <di:waypoint x="2145" y="930" />
        <di:waypoint x="2162" y="930" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03iew5h_di" bpmnElement="Flow_03iew5h">
        <di:waypoint x="2170" y="770" />
        <di:waypoint x="2195" y="770" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1eoxeup_di" bpmnElement="Flow_1eoxeup">
        <di:waypoint x="1930" y="930" />
        <di:waypoint x="1960" y="930" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16lmlsc_di" bpmnElement="Flow_16lmlsc">
        <di:waypoint x="2040" y="770" />
        <di:waypoint x="2070" y="770" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0fve53x_di" bpmnElement="newXp.intrusion.main.badAnswer">
        <di:waypoint x="1780" y="660" />
        <di:waypoint x="1852" y="660" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1784" y="643" width="60" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1lhd1ki_di" bpmnElement="newXp.main.answerIsNo">
        <di:waypoint x="1755" y="795" />
        <di:waypoint x="1755" y="930" />
        <di:waypoint x="1830" y="930" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1762" y="853" width="15" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1bud0vy_di" bpmnElement="newXp.main.answerIsYes">
        <di:waypoint x="1780" y="770" />
        <di:waypoint x="1820" y="770" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1781" y="753" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0l0o36y_di" bpmnElement="newXp.intrusion.main.goodAnswer">
        <di:waypoint x="1755" y="685" />
        <di:waypoint x="1755" y="745" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1721" y="703" width="67" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16gzdhz_di" bpmnElement="Flow_16gzdhz">
        <di:waypoint x="1640" y="660" />
        <di:waypoint x="1730" y="660" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13px4ab_di" bpmnElement="Flow_13px4ab">
        <di:waypoint x="2400" y="280" />
        <di:waypoint x="2450" y="280" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0tr0axn_di" bpmnElement="Flow_0tr0axn">
        <di:waypoint x="2080" y="280" />
        <di:waypoint x="2130" y="280" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0svfl96_di" bpmnElement="Flow_0svfl96">
        <di:waypoint x="2055" y="370" />
        <di:waypoint x="2180" y="370" />
        <di:waypoint x="2180" y="320" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2088" y="352" width="60" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0xedf4f_di" bpmnElement="Flow_0xedf4f">
        <di:waypoint x="2230" y="280" />
        <di:waypoint x="2300" y="280" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1smjr1n_di" bpmnElement="Flow_1smjr1n">
        <di:waypoint x="2030" y="345" />
        <di:waypoint x="2030" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1pk1nwr_di" bpmnElement="Flow_1pk1nwr">
        <di:waypoint x="2178" y="980" />
        <di:waypoint x="2202" y="980" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0bmrak6_di" bpmnElement="Flow_0bmrak6">
        <di:waypoint x="1300" y="460" />
        <di:waypoint x="1330" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0f7v69y_di" bpmnElement="Flow_0f7v69y">
        <di:waypoint x="1430" y="460" />
        <di:waypoint x="1460" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0sj72vu_di" bpmnElement="Flow_0sj72vu">
        <di:waypoint x="1740" y="460" />
        <di:waypoint x="1765" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1o0q7m5_di" bpmnElement="Flow_1o0q7m5">
        <di:waypoint x="1790" y="485" />
        <di:waypoint x="1790" y="542" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_09rb81x_di" bpmnElement="Flow_09rb81x">
        <di:waypoint x="1772" y="560" />
        <di:waypoint x="1740" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03eo4pp_di" bpmnElement="Flow_03eo4pp">
        <di:waypoint x="1590" y="535" />
        <di:waypoint x="1590" y="460" />
        <di:waypoint x="1640" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vaxp9p_di" bpmnElement="Flow_1vaxp9p">
        <di:waypoint x="1560" y="460" />
        <di:waypoint x="1640" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1o9543s_di" bpmnElement="Flow_1o9543s">
        <di:waypoint x="1640" y="560" />
        <di:waypoint x="1615" y="560" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_10820mx_di" bpmnElement="Flow_10820mx">
        <di:waypoint x="1590" y="585" />
        <di:waypoint x="1590" y="620" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0qikdsj_di" bpmnElement="Flow_0qikdsj">
        <di:waypoint x="1540" y="290" />
        <di:waypoint x="1570" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1l8qta3_di" bpmnElement="Flow_1l8qta3">
        <di:waypoint x="1670" y="290" />
        <di:waypoint x="1730" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0lckyaw_di" bpmnElement="Flow_0lckyaw">
        <di:waypoint x="1400" y="290" />
        <di:waypoint x="1440" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1gvdey2_di" bpmnElement="Flow_1gvdey2">
        <di:waypoint x="1070" y="435" />
        <di:waypoint x="1070" y="290" />
        <di:waypoint x="1300" y="290" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1080" y="383" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0o9mn37_di" bpmnElement="Flow_0o9mn37">
        <di:waypoint x="1830" y="290" />
        <di:waypoint x="1862" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1pd6wu6_di" bpmnElement="Flow_1pd6wu6">
        <di:waypoint x="283" y="310" />
        <di:waypoint x="347" y="310" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_15yt90p_di" bpmnElement="Flow_15yt90p">
        <di:waypoint x="790" y="460" />
        <di:waypoint x="805" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1f9mx24_di" bpmnElement="newXp.intrusion.main.noAlarmActive">
        <di:waypoint x="855" y="460" />
        <di:waypoint x="920" y="460" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="831" y="423" width="78" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ietpyy_di" bpmnElement="newXp.intrusion.main.alarmActive">
        <di:waypoint x="830" y="485" />
        <di:waypoint x="830" y="565" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="840" y="513" width="60" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16pgd3o_di" bpmnElement="newXp.intrusion.main.alarmGreater3Min">
        <di:waypoint x="855" y="590" />
        <di:waypoint x="920" y="590" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="840" y="563" width="68" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0b1yq2l_di" bpmnElement="newXp.intrusion.main.alarmLower3Min">
        <di:waypoint x="830" y="615" />
        <di:waypoint x="830" y="660" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="840" y="627" width="68" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0o5h0bk_di" bpmnElement="Flow_0o5h0bk">
        <di:waypoint x="530" y="460" />
        <di:waypoint x="570" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1rhq9nx_di" bpmnElement="Flow_1rhq9nx">
        <di:waypoint x="670" y="460" />
        <di:waypoint x="690" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1s6r17b_di" bpmnElement="Flow_1s6r17b">
        <di:waypoint x="400" y="460" />
        <di:waypoint x="430" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01ux8m5_di" bpmnElement="Flow_01ux8m5">
        <di:waypoint x="268" y="460" />
        <di:waypoint x="300" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_19s5kbh_di" bpmnElement="Flow_19s5kbh">
        <di:waypoint x="1020" y="460" />
        <di:waypoint x="1045" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0rchavp_di" bpmnElement="Flow_0rchavp">
        <di:waypoint x="1020" y="590" />
        <di:waypoint x="1070" y="590" />
        <di:waypoint x="1070" y="485" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1flaio7_di" bpmnElement="Flow_1flaio7">
        <di:waypoint x="830" y="860" />
        <di:waypoint x="830" y="912" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0aymv4p_di" bpmnElement="Flow_0aymv4p">
        <di:waypoint x="830" y="740" />
        <di:waypoint x="830" y="780" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_06idoqu_di" bpmnElement="Flow_06idoqu">
        <di:waypoint x="2455" y="460" />
        <di:waypoint x="2577" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1o109jy_di" bpmnElement="Flow_1o109jy">
        <di:waypoint x="2430" y="485" />
        <di:waypoint x="2430" y="515" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1g64wn4_di" bpmnElement="Flow_1g64wn4">
        <di:waypoint x="2455" y="540" />
        <di:waypoint x="2512" y="540" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2560" y="522" width="60" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1p8x1di_di" bpmnElement="Flow_1p8x1di">
        <di:waypoint x="2430" y="565" />
        <di:waypoint x="2430" y="610" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2336" y="576" width="88" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0wbj18i_di" bpmnElement="Flow_0wbj18i">
        <di:waypoint x="2430" y="435" />
        <di:waypoint x="2430" y="408" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1b63gvc_di" bpmnElement="Flow_1b63gvc">
        <di:waypoint x="2548" y="540" />
        <di:waypoint x="2622" y="540" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1wmojbv_di" bpmnElement="Flow_1wmojbv">
        <di:waypoint x="2555" y="930" />
        <di:waypoint x="2430" y="930" />
        <di:waypoint x="2430" y="690" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0p3u9a0_di" bpmnElement="Flow_0p3u9a0">
        <di:waypoint x="2480" y="650" />
        <di:waypoint x="2555" y="650" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_19829pg_di" bpmnElement="Flow_19829pg">
        <di:waypoint x="2605" y="650" />
        <di:waypoint x="2760" y="650" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1pohp0o_di" bpmnElement="Flow_1pohp0o">
        <di:waypoint x="2580" y="675" />
        <di:waypoint x="2580" y="712" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_11attnb_di" bpmnElement="Flow_11attnb">
        <di:waypoint x="2860" y="650" />
        <di:waypoint x="2900" y="650" />
        <di:waypoint x="2900" y="702" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_09b3u6r" bpmnElement="Flow_12cce9e">
        <di:waypoint x="2860" y="840" />
        <di:waypoint x="2900" y="840" />
        <di:waypoint x="2900" y="738" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1t8r8yj_di" bpmnElement="Flow_1t8r8yj">
        <di:waypoint x="2605" y="930" />
        <di:waypoint x="2810" y="930" />
        <di:waypoint x="2810" y="880" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ha2x6g_di" bpmnElement="Flow_1ha2x6g">
        <di:waypoint x="2580" y="748" />
        <di:waypoint x="2580" y="800" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1q26ubn_di" bpmnElement="Flow_1q26ubn">
        <di:waypoint x="2580" y="880" />
        <di:waypoint x="2580" y="905" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0rkclqg_di" bpmnElement="Flow_0rkclqg">
        <di:waypoint x="2665" y="280" />
        <di:waypoint x="2742" y="280" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1etigpz_di" bpmnElement="Flow_1etigpz">
        <di:waypoint x="2640" y="305" />
        <di:waypoint x="2640" y="326" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0z81cph_di" bpmnElement="Flow_0z81cph">
        <di:waypoint x="1920" y="770" />
        <di:waypoint x="1940" y="770" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0lm6rrs_di" bpmnElement="Flow_0lm6rrs">
        <di:waypoint x="2220" y="795" />
        <di:waypoint x="2220" y="810" />
        <di:waypoint x="2242" y="810" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1v1ky47_di" bpmnElement="Flow_1v1ky47">
        <di:waypoint x="2221" y="746" />
        <di:waypoint x="2221" y="720" />
        <di:waypoint x="2242" y="720" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ebb1ox_di" bpmnElement="Flow_0ebb1ox">
        <di:waypoint x="2550" y="280" />
        <di:waypoint x="2615" y="280" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1a18ypv_di" bpmnElement="Flow_1a18ypv">
        <di:waypoint x="1165" y="460" />
        <di:waypoint x="1200" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1c5v0yx_di" bpmnElement="Flow_1c5v0yx">
        <di:waypoint x="1095" y="460" />
        <di:waypoint x="1115" y="460" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1084" y="473" width="27" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ucveis_di" bpmnElement="Flow_1ucveis">
        <di:waypoint x="1165" y="880" />
        <di:waypoint x="1292" y="880" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1217" y="862" width="23" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_10f6996_di" bpmnElement="Flow_10f6996">
        <di:waypoint x="1140" y="905" />
        <di:waypoint x="1140" y="960" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1146" y="916" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_108rvc2_di" bpmnElement="Flow_108rvc2">
        <di:waypoint x="1140" y="820" />
        <di:waypoint x="1140" y="855" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_03ir0dl_di" bpmnElement="Flow_03ir0dl">
        <di:waypoint x="1165" y="670" />
        <di:waypoint x="1310" y="670" />
        <di:waypoint x="1310" y="862" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1226" y="652" width="23" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_104qsmb_di" bpmnElement="Flow_104qsmb">
        <di:waypoint x="1140" y="695" />
        <di:waypoint x="1140" y="740" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1146" y="703" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ba6bmf_di" bpmnElement="Flow_0ba6bmf">
        <di:waypoint x="1140" y="485" />
        <di:waypoint x="1140" y="520" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1tavky7_di" bpmnElement="Flow_1tavky7">
        <di:waypoint x="1140" y="600" />
        <di:waypoint x="1140" y="645" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_0dp0xuf_di" bpmnElement="intrusion.end" isHorizontal="true" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1730" y="1100" width="690" height="178" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0gh7wkc_di" bpmnElement="Event_017w6ci">
        <dc:Bounds x="1782" y="1152" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0vxs74t_di" bpmnElement="Event_0r7w8dd">
        <dc:Bounds x="2172" y="1152" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2160" y="1195" width="60" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ntcaqp" bpmnElement="end.intrusion.thingsboard.ackAlarm">
        <dc:Bounds x="1960" y="1130" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0gcpoxi_di" bpmnElement="Flow_0gcpoxi">
        <di:waypoint x="1818" y="1170" />
        <di:waypoint x="1960" y="1170" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_02e1y9v_di" bpmnElement="Flow_02e1y9v">
        <di:waypoint x="2060" y="1170" />
        <di:waypoint x="2172" y="1170" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_1gq81t1_di" bpmnElement="intrusion.sendSms" isHorizontal="true" bioc:stroke="#831311" bioc:fill="#ffcdd2" color:background-color="#ffcdd2" color:border-color="#831311">
        <dc:Bounds x="1300" y="1100" width="400" height="178" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1ofgr96_di" bpmnElement="Event_1eysr4u">
        <dc:Bounds x="1352" y="1152" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1y0b34s" bpmnElement="sendSms.notification.sendSms">
        <dc:Bounds x="1430" y="1130" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_134w6bc_di" bpmnElement="Flow_134w6bc">
        <di:waypoint x="1388" y="1170" />
        <di:waypoint x="1430" y="1170" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_0tflgxz_di" bpmnElement="intrusion.confirmedAlarm" isHorizontal="true" bioc:stroke="#205022" bioc:fill="#c8e6c9" color:background-color="#c8e6c9" color:border-color="#205022">
        <dc:Bounds x="1300" y="1290" width="1740" height="350" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1hw6148_di" bpmnElement="confirmedAlarm.intrusion.setVariables">
        <dc:Bounds x="1560" y="1410" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1isk9iu" bpmnElement="Event_1jj3bma">
        <dc:Bounds x="1362" y="1432" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1v9wcjt" bpmnElement="Activity_07wbqp0">
        <dc:Bounds x="1730" y="1410" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0h0z1r0" bpmnElement="Gateway_185ug67">
        <dc:Bounds x="1915" y="1425" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ag6csi" bpmnElement="confirmedAlarm.intrusion.kafkaUtil.sendToEvent">
        <dc:Bounds x="2030" y="1500" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1xktn51" bpmnElement="Gateway_17wf855">
        <dc:Bounds x="2195" y="1425" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0qtenku" bpmnElement="confirmedAlarm.intrusion.kafkaUtil.sendToTls">
        <dc:Bounds x="2100" y="1310" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1k7ahwa" bpmnElement="Activity_1i0h7ga" bioc:stroke="#0d4372" bioc:fill="#bbdefb" color:background-color="#bbdefb" color:border-color="#0d4372">
        <dc:Bounds x="1970" y="1310" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_066d06l_di" bpmnElement="Flow_066d06l">
        <di:waypoint x="1398" y="1450" />
        <di:waypoint x="1560" y="1450" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ee2p56_di" bpmnElement="Flow_0ee2p56">
        <di:waypoint x="1660" y="1450" />
        <di:waypoint x="1730" y="1450" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_17f2fpv_di" bpmnElement="Flow_17f2fpv">
        <di:waypoint x="1830" y="1450" />
        <di:waypoint x="1915" y="1450" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1c7ui91_di" bpmnElement="Flow_1c7ui91">
        <di:waypoint x="1940" y="1425" />
        <di:waypoint x="1940" y="1350" />
        <di:waypoint x="1970" y="1350" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1s13fxv_di" bpmnElement="Flow_1s13fxv">
        <di:waypoint x="1940" y="1475" />
        <di:waypoint x="1940" y="1540" />
        <di:waypoint x="2030" y="1540" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13w6n0a_di" bpmnElement="Flow_13w6n0a">
        <di:waypoint x="2130" y="1540" />
        <di:waypoint x="2220" y="1540" />
        <di:waypoint x="2220" y="1475" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1x0qrw2_di" bpmnElement="Flow_1x0qrw2">
        <di:waypoint x="2200" y="1350" />
        <di:waypoint x="2220" y="1350" />
        <di:waypoint x="2220" y="1425" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_181uq1x_di" bpmnElement="Flow_181uq1x">
        <di:waypoint x="2070" y="1350" />
        <di:waypoint x="2100" y="1350" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_12a9rgr_di" bpmnElement="Participant_12a9rgr" isHorizontal="true" bioc:stroke="#831311" bioc:fill="#ffcdd2" color:background-color="#ffcdd2" color:border-color="#831311">
        <dc:Bounds x="160" y="80" width="2880" height="100" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Participant_0c6hgg6_di" bpmnElement="intrusion.logoutKC" isHorizontal="true" bioc:stroke="#6b3c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#6b3c00">
        <dc:Bounds x="2450" y="1100" width="590" height="178" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1j77g04" bpmnElement="logoutKC.intrusion.receiveSignal">
        <dc:Bounds x="2502" y="1200" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2494" y="1243" width="53" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0pvmto6" bpmnElement="Gateway_0h7n48v">
        <dc:Bounds x="2585" y="1193" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0v6x0rw" bpmnElement="logoutKC.ibtrusion.camunda.authKC">
        <dc:Bounds x="2680" y="1178" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1dg0wia" bpmnElement="logoutKC.intrusion.endProcess">
        <dc:Bounds x="2842" y="1200" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2829" y="1243" width="62" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1ylspmf" bpmnElement="logoutKC.intrusion.logoutAfterXminutes">
        <dc:Bounds x="2712" y="1120" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="2762" y="1124" width="75" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_0devwio" bpmnElement="Flow_1c3s6nv">
        <di:waypoint x="2538" y="1218" />
        <di:waypoint x="2585" y="1218" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0yuiyul" bpmnElement="Flow_0xm6ttw">
        <di:waypoint x="2635" y="1218" />
        <di:waypoint x="2680" y="1218" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1boi4nx" bpmnElement="Flow_1usg6nl">
        <di:waypoint x="2610" y="1193" />
        <di:waypoint x="2610" y="1138" />
        <di:waypoint x="2712" y="1138" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1xby87h" bpmnElement="Flow_16he9g2">
        <di:waypoint x="2730" y="1156" />
        <di:waypoint x="2730" y="1178" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0mc20o0" bpmnElement="Flow_02queo9">
        <di:waypoint x="2780" y="1218" />
        <di:waypoint x="2842" y="1218" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
